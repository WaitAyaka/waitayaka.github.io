<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/04/30/%E4%BA%91%E5%B4%BDQQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-%EF%BC%88Linux%EF%BC%89/"/>
      <url>/2024/04/30/%E4%BA%91%E5%B4%BDQQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2-%EF%BC%88Linux%EF%BC%89/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2023年网络建设与运维KVM创建虚拟机的全过程</title>
      <link href="/2024/04/24/2023%E5%B9%B4%E7%BD%91%E7%BB%9C%E5%BB%BA%E8%AE%BE%E4%B8%8E%E8%BF%90%E7%BB%B4KVM%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%85%A8%E8%BF%87%E7%A8%8B/"/>
      <url>/2024/04/24/2023%E5%B9%B4%E7%BD%91%E7%BB%9C%E5%BB%BA%E8%AE%BE%E4%B8%8E%E8%BF%90%E7%BB%B4KVM%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E5%85%A8%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="KVM-Rocky创建KVM虚拟机的全过程"><a href="#KVM-Rocky创建KVM虚拟机的全过程" class="headerlink" title="KVM Rocky创建KVM虚拟机的全过程"></a>KVM Rocky创建KVM虚拟机的全过程</h1><h2 id="编辑网卡信息"><a href="#编辑网卡信息" class="headerlink" title="编辑网卡信息"></a>编辑网卡信息</h2><h3 id="配置本地IP"><a href="#配置本地IP" class="headerlink" title="配置本地IP"></a>配置本地IP</h3><ul><li>编辑网卡配置文件</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim &#x27;网卡配置文件&#x27;</span><br><span class="line">[ethernet]</span><br><span class="line">method=manual</span><br><span class="line">address1=10.4.220.100/24,10.4.220.1 </span><br></pre></td></tr></table></figure><ul><li>在Ubuntu上测试连通性</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@WaitAyaka:/home/waitayaka/桌面# ping 10.4.220.100</span><br><span class="line">PING 10.4.220.100 (10.4.220.100) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.4.220.100: icmp_seq=1 ttl=63 time=1.66 ms</span><br><span class="line">64 bytes from 10.4.220.100: icmp_seq=2 ttl=63 time=1.66 ms</span><br><span class="line">64 bytes from 10.4.220.100: icmp_seq=3 ttl=63 time=1.62 ms</span><br><span class="line">64 bytes from 10.4.220.100: icmp_seq=4 ttl=63 time=1.68 ms</span><br><span class="line">64 bytes from 10.4.220.100: icmp_seq=5 ttl=63 time=1.73 ms</span><br></pre></td></tr></table></figure><h2 id="Ubuntu远程连接"><a href="#Ubuntu远程连接" class="headerlink" title="Ubuntu远程连接"></a>Ubuntu远程连接</h2><p><code>比赛的时候PC是Ubuntu 所以我们还是要配置以下远程连接 使得可以在Ubuntu远程操控</code></p><ul><li>Rocky上的配置</li></ul><ol><li>编辑/etc/ssh/sshd_conf文件 <code>允许使用root用户进行SSH</code></li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">40 PermitRootLogin yes</span><br></pre></td></tr></table></figure><ol><li>重启ssh服务</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure><ul><li>Ubuntu上的配置</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@WaitAyaka:/home/waitayaka/桌面# ssh 10.4.220.100</span><br><span class="line">root@10.4.220.100&#x27;s password:   //输入root用户的密码</span><br><span class="line">Activate the web console with: systemctl enable --now cockpit.socket</span><br><span class="line">Last failed login: Tue Apr 23 09:24:05 EDT 2024 on pts/0</span><br><span class="line">There were 8 failed login attempts since the last successful login.</span><br><span class="line">Last login: Mon Mar 20 00:24:56 2023 from 10.4.11.100</span><br><span class="line"></span><br><span class="line">[root@10-4-220-100 ~]# </span><br></pre></td></tr></table></figure><h2 id="配置网络源仓库"><a href="#配置网络源仓库" class="headerlink" title="配置网络源仓库"></a>配置网络源仓库</h2><p><code>网络源仓库也是相当重要的</code>这是我们KVM创建虚拟机的软件仓库  可以远程之后<code>在Rocky上进行以下操作</code></p><ol><li>下载相关软件包</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y httpd*</span><br></pre></td></tr></table></figure><ol><li>将镜像挂载到/var/www/html/cdrom下面</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir /var/www//html/cdrom -p</span><br><span class="line">mount /opt/rocky9.2.iso /var/www/html/cdrom</span><br></pre></td></tr></table></figure><ol><li>编辑cdrom目录权限</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/httpd/conf/httpd.conf359 &lt;Directory &quot;/var/www/html&quot;&gt;</span><br><span class="line">· 最后添加以下参数</span><br><span class="line">360         Require all granted</span><br><span class="line">361             Options Indexes FollowSymLinks</span><br><span class="line">362     AllowOverride ALL</span><br><span class="line">363 &lt;/Directory&gt;</span><br></pre></td></tr></table></figure><ol><li>重启服务 关闭防火墙</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable --now httpd;systemctl stop firewalld;setenforce 0</span><br></pre></td></tr></table></figure><ol><li>在浏览器上访问测试</li></ol><p><img src="image-20240424104036246.png" alt="image-20240424104036246"></p><h2 id="配置管理桥接网卡"><a href="#配置管理桥接网卡" class="headerlink" title="配置管理桥接网卡"></a>配置管理桥接网卡</h2><p><code>现在我们需要做的是在Rocky上配置好KVM虚拟机需要桥接的网卡 使得Ubuntu可以连接到KVM虚拟机</code></p><h3 id="添加桥接网卡"><a href="#添加桥接网卡" class="headerlink" title="添加桥接网卡"></a>添加桥接网卡</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmcli c add type brigde ifname br0</span><br></pre></td></tr></table></figure><h3 id="将本地网卡连接至桥接网卡"><a href="#将本地网卡连接至桥接网卡" class="headerlink" title="将本地网卡连接至桥接网卡"></a>将本地网卡连接至桥接网卡</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nmcli  c add type bridge-slave ifname `被桥接的网卡` master br0</span><br></pre></td></tr></table></figure><h3 id="编辑网卡IP地址"><a href="#编辑网卡IP地址" class="headerlink" title="编辑网卡IP地址"></a>编辑网卡IP地址</h3><ul><li>slave 本地网卡 <code>这里的bridge-slave-enp0s20f0u3u2.nmconnection</code>是我的本地网卡名称 每个人的可能不一样</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/NetworkManager/system-connections/bridge-slave-enp0s20f0u3u2.nmconnection</span><br><span class="line"> 9 [ethernet]</span><br><span class="line"> 10 method=auto  //将method模式改为auto   表示自动获取IP</span><br></pre></td></tr></table></figure><ul><li>bridge 桥接网卡</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/NetworkManager/system-connections/bridge-br0.nmconnection</span><br><span class="line"> 12 method=manual</span><br><span class="line"> 13 address1=10.4.220.100/24,10.4.220.1 //这里设置为题目要求的IP 23国赛为10.4.220.100</span><br></pre></td></tr></table></figure><h3 id="重启网卡"><a href="#重启网卡" class="headerlink" title="重启网卡"></a>重启网卡</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@10-4-220-100 ~]# nmcli c up ens160</span><br><span class="line">连接已成功激活（D-Bus 活动路径：/org/freedesktop/NetworkManager/ActiveConnection/10）</span><br><span class="line">[root@10-4-220-100 ~]# nmcli c up bridge-br0</span><br><span class="line">连接已成功激活（master waiting for slaves）（D-Bus 活动路径：/org/freedesktop/NetworkManager/ActiveConnection/11）</span><br></pre></td></tr></table></figure><h3 id="查看所有网卡信息"><a href="#查看所有网卡信息" class="headerlink" title="查看所有网卡信息"></a>查看所有网卡信息</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">br0：已连接 到 bridge-br0</span><br><span class="line">        &quot;br0&quot;</span><br><span class="line">        bridge, 00:E0:4C:36:23:31, 软件, mtu 1500</span><br><span class="line">        ip4 默认</span><br><span class="line">        inet4 10.4.220.100/24</span><br><span class="line">        route4 10.4.220.0/24 metric 425</span><br><span class="line">        route4 default via 10.4.220.1 metric 425</span><br><span class="line">        inet6 fe80::fe9b:d788:6ce:bd87/64</span><br><span class="line">        route6 fe80::/64 metric 1024</span><br><span class="line"></span><br><span class="line">lo：连接（外部） 到 lo</span><br><span class="line">        &quot;lo&quot;</span><br><span class="line">        loopback (unknown), 00:00:00:00:00:00, 软件, mtu 65536</span><br><span class="line">        inet4 127.0.0.1/8</span><br><span class="line">        inet6 ::1/128</span><br><span class="line">        route6 ::1/128 metric 256</span><br><span class="line"></span><br><span class="line">enp0s20f0u3u2：已连接 到 bridge-slave-enp0s20f0u3u2</span><br><span class="line">        &quot;Realtek RTL8152&quot;</span><br><span class="line">        ethernet (r8152), 00:E0:4C:36:23:31, 硬件, mtu 1500</span><br><span class="line">        主连接 br0   </span><br></pre></td></tr></table></figure><h2 id="创建KVM虚拟机"><a href="#创建KVM虚拟机" class="headerlink" title="创建KVM虚拟机"></a>创建KVM虚拟机</h2><p><code>现在就可以来创建虚拟机了</code> 最好还是在Ubuntu的默认终端下SSH Rocky</p><h3 id="下载相关服务软件"><a href="#下载相关服务软件" class="headerlink" title="下载相关服务软件"></a>下载相关服务软件</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y libvirt* virt* bash-* qemu*</span><br></pre></td></tr></table></figure><h3 id="开放相关服务-关闭防火墙"><a href="#开放相关服务-关闭防火墙" class="headerlink" title="开放相关服务 关闭防火墙"></a>开放相关服务 关闭防火墙</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl restart libvirtd;systemctl stop firewalld;setenforce 0</span><br></pre></td></tr></table></figure><h3 id="创建实例"><a href="#创建实例" class="headerlink" title="创建实例"></a>创建实例</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">virt-install --name linux0 --ram 2048 --vcpus 2 --disk path=/var/lib/libvirt/images/linux0.qcow2,size=40 --os-variant auto --network bridge=br0 --cdrom /opt/rocky9.2.iso --graphics vnc,listen=0.0.0.0 </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="image-20240424101820775.png" alt="image-20240424101820775"></p><p><code>等到这个界面的时候我们就可以打开Remmina了</code></p><p><img src="image-20240424102031446.png" alt="image-20240424102031446"></p><ul><li>下面是连接成功的样子 <code>安装摘要的时候选择最小安装！！！</code></li></ul><p><img src="image-20240424102123987.png" alt="image-20240424102123987"></p><h2 id="虚拟机的快照及批量创建"><a href="#虚拟机的快照及批量创建" class="headerlink" title="虚拟机的快照及批量创建"></a>虚拟机的快照及批量创建</h2><p><code>在KVM虚拟机上的第一步就是尝试与外界的互ping</code> 为了测试 我们在linux0上添加IP地址</p><ol><li>编辑好Linux0的网卡 尝试互ping</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@10-4-220-100 ~]# ping 10.4.220.101</span><br><span class="line">PING 10.4.220.101 (10.4.220.101) 56(84) 比特的数据。</span><br><span class="line">64 比特，来自 10.4.220.101: icmp_seq=1 ttl=64 时间=0.657 毫秒</span><br><span class="line">64 比特，来自 10.4.220.101: icmp_seq=2 ttl=64 时间=0.494 毫秒</span><br></pre></td></tr></table></figure><p><code>可以ping通 说明网桥的配置没有问题 接下来我们配置一下yum源</code></p><ul><li>指定软件仓库地址</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm -rf /etc/yum.repos.d/*</span><br><span class="line">vi /etc/yum.repos.d/yum.repo</span><br><span class="line"></span><br><span class="line">[A]</span><br><span class="line">name=A</span><br><span class="line">baseurl=http://10.4.220.100/cdrom/AppStream</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br><span class="line">[B]</span><br><span class="line">name=B</span><br><span class="line">baseurl=http://10.4.220.100/cdrom/BaseOS</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><ul><li>下载需要的服务</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y vim bind* net-tools* tar* unzip*</span><br></pre></td></tr></table></figure><p><img src="image-20240424104501638.png" alt="image-20240424104501638"></p><h3 id="创建快照"><a href="#创建快照" class="headerlink" title="创建快照"></a>创建快照</h3><p><code>现在下载好了需要的一些服务后 我们就可以创建快照来批量创建虚拟机了</code></p><ul><li>创建快照模板</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@10-4-220-100 ~]# virsh snapshot-create-as linux0 linux-snapshot</span><br><span class="line">已生成域快照 linux-snapshot</span><br></pre></td></tr></table></figure><ul><li>利用快照创建虚拟机</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">`利用快照创建虚拟机首先要关闭快照其虚拟机`</span><br><span class="line">virsh shutdown linux0  </span><br><span class="line">`现在就可以创建了`</span><br><span class="line">virt-clone --original linux0 --name linux1 --file /var/lib/libvirt/images/linux1.qcow2 --auto-clone </span><br></pre></td></tr></table></figure><p><img src="image-20240424105015273.png" alt="image-20240424105015273"></p><h3 id="查看虚拟机列表"><a href="#查看虚拟机列表" class="headerlink" title="查看虚拟机列表"></a>查看虚拟机列表</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@10-4-220-100 ~]# virsh list --all</span><br><span class="line"> Id   名称     状态</span><br><span class="line">---------------------</span><br><span class="line"> -    linux0   关闭</span><br><span class="line"> -    linux1   关闭</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="重启虚拟机"><a href="#重启虚拟机" class="headerlink" title="重启虚拟机"></a>重启虚拟机</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@10-4-220-100 ~]# virsh start linux1</span><br><span class="line">域 &#x27;linux1&#x27; 已启动</span><br></pre></td></tr></table></figure><p><img src="image-20240424105507057.png" alt="image-20240424105507057"></p><p><code>基本上这就是全部的工作了 只需要把剩余的虚拟机创建好就行了</code> 最后我们试着再次互ping测试连通信</p><ul><li>设置Linux1的IP地址为10.4.220.101</li></ul><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">waitayaka@WaitAyaka:~/桌面$ ping 10.4.220.101</span><br><span class="line">PING 10.4.220.102 (10.4.220.102) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.4.220.101: icmp_seq=1 ttl=63 time=3.73 ms</span><br><span class="line">64 bytes from 10.4.220.101: icmp_seq=2 ttl=63 time=2.09 ms</span><br><span class="line">64 bytes from 10.4.220.101: icmp_seq=3 ttl=63 time=1.99 ms</span><br><span class="line">64 bytes from 10.4.220.101: icmp_seq=4 ttl=63 time=2.09 ms</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> KVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 网络建设与运维 </tag>
            
            <tag> KVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>保姆级教学 Samba服务器的配置与管理</title>
      <link href="/2024/04/16/Samba%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
      <url>/2024/04/16/Samba%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>@<a href="Samba服务器的配置与管理">TOC</a></p><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2><h3 id="-2"><a href="#-2" class="headerlink" title=" "></a> </h3><p>在Linux中，大家听的最多的可能就是Samba服务，什么是Samba呢，Samba是连接Linux与Windows的桥梁，真是由于Samba的出现，我们才可以在Linux和Windows间互相通信。</p><h1 id="1、Samba服务器配置的工作流程"><a href="#1、Samba服务器配置的工作流程" class="headerlink" title="1、Samba服务器配置的工作流程"></a>1、Samba服务器配置的工作流程</h1><p>在Samba服务安装完毕之后，并不是直接可以使用Windows或Linux的客户端访问Samba服务器，我们还必须对服务器进行设置：告诉Samba服务器将那些目录共享出来给客户端进行访问。</p><p><strong><code>基本的Samba服务器搭建流程主要分为四个步骤</code></strong>。</p><p>（1）编辑主配置文件smb.conf，指定需要共享的目录，并未共享目录设置共享权限。</p><p>（2）在smb.conf文件中指定日志文件名称和存放路径。</p><p>（3）设置共享目录的本地系统权限</p><p>（4）重新加载配置文件或重新启动SMB服务，使配置生效。</p><h2 id="1-1-Samba工作流程"><a href="#1-1-Samba工作流程" class="headerlink" title="1.1 Samba工作流程"></a>1.1 Samba工作流程</h2><p>1、客户端请求访问Samba服务器上的共项目录</p><p>2、Samba服务器接收到请求后，会查询主配置文件smb.conf，看是否共享了share目录，如果共享了则查询客户端是否有权限访问。</p><p>3、Samba服务器会把本次访问信息记录写在日志中，日志文件的名称和路径都需要我们设置。</p><p>4、如果客户端满足访问权限的设置，则允许客户端进行访问。</p><p><img src="45f56e40c19836949b4f4c91e60118de-1714441598557.png" alt="image.png"></p><h1 id="2、解读主要配置文件smb-conf"><a href="#2、解读主要配置文件smb-conf" class="headerlink" title="2、解读主要配置文件smb.conf"></a>2、解读主要配置文件smb.conf</h1><p>Samba的<code>配置文件一般就放在/etc/samba目录中。主配置文件名为smb.conf</code>，如果把Samba服务器比喻成一个图书馆，那么smb.conf就相当于这个图书馆的图书总目录，记录着大量的共享信息和规则，是samba服务器的核心。</p><h2 id="2-1-Global-Settings"><a href="#2-1-Global-Settings" class="headerlink" title="2.1 Global Settings"></a>2.1 Global Settings</h2><p>Global settings 设置为全局变量区域。<strong><code>全局变量区域就是我们只要在Global是进行设置</code></strong>，<strong><code>那么该设置项目就是针对所有共享资源生效的</code></strong>，这与我们以后需要学习的很多服务器配置很相像。</p><p>该部分以[Global]开头</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">        workgroup <span class="operator">=</span> SAMBA      <span class="operator">/</span><span class="operator">/</span>设置工作组或域名</span><br><span class="line">        security <span class="operator">=</span> <span class="keyword">user</span>          <span class="operator">/</span><span class="operator">/</span>设置安全模式</span><br><span class="line"></span><br><span class="line">        passdb backend <span class="operator">=</span> tdbsam</span><br><span class="line"></span><br><span class="line">        printing <span class="operator">=</span> cups</span><br><span class="line">        printcap name <span class="operator">=</span> cups</span><br><span class="line">        load printers <span class="operator">=</span> yes</span><br><span class="line">        cups options <span class="operator">=</span> raw</span><br></pre></td></tr></table></figure><p>[Global]常用字段及设置方法如下</p><p>（1）<strong>设置工作组或域名称</strong></p><p>工作组是网络中地位平等的一组计算机，可以通过设置workgroup字段来对Samba服务器所在工作组或域名进行设置。</p><p>（2）<strong>设置Samba服务器安全模式</strong></p><p>Samba服务器一共share,user,server,domain和ads五种安全模式。</p><p>1、<strong><code>share安全级别模式</code></strong>。客户端登陆Samba服务器、不需要输入用户名和密码就可以浏览Samba服务器的资源，适用于公共的资源共享，安全性差，需要配合其他权限进行设置。保证Samba服务器的安全性。</p><p>2、<strong><code>user安全级别模式</code></strong>。客户端登陆Samba服务器、需要输入指定的用户名和密码才能进行浏览Samba服务器的资源，服务器默认为此级别模式。</p><p>3、server安全级别模式。客户端需要将用户名和密码提交到指定的一台Samba服务器上进行验证，如果验证出现错误，客户端会使用user级别访问。</p><p>4、domain安全级别模式。如果Samba服务器加入Windows域环境中，验证工作将由Windows域负责，domain级别的Samba服务器这是成为域的成员客户端，并不具备服务器的特性。</p><h2 id="2-2-客户端访问控制"><a href="#2-2-客户端访问控制" class="headerlink" title="2.2  客户端访问控制"></a>2.2  客户端访问控制</h2><p>对于Samba服务器的安全性，可以使用vliad users字段去实现用户控制访问，但是如果企业庞大且存在大量的用户的话，这种方法操作起来就比较的麻烦。所以我们可以使用hosts allow和hosts deny两个字段可以实现该功能。</p><p>hosts allow和hosts deny字段的使用</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">hosts allow 字段定义允许访问的客户端</span><br><span class="line">hosts deny 字段定义禁止访问的客户端</span><br></pre></td></tr></table></figure><p>Samba服务器中有个目录为/share。需要发布该目录成为共享目录，定义共享目录名为public。</p><h1 id="3、最常用的几个字段"><a href="#3、最常用的几个字段" class="headerlink" title="3、最常用的几个字段"></a>3、最常用的几个字段</h1><p>（1）<strong>设置共享名</strong>。<br>共享资源发布后，必须为每个共享目录设置不同的共享名，给网络用户访问时使用，并且共享名可以以原目录名不同。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">格式：</span><br><span class="line">[共享名]</span><br></pre></td></tr></table></figure><p>（2）<strong>共享资源描述</strong>。<br>网络中存在各种共享资源，为了方便用户识别，可以为其添加备注信息，以方便用户查看时知道共享资源的内容是什么。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">comment <span class="operator">=</span> 备注信息</span><br></pre></td></tr></table></figure><p>（3）<strong>共享资源路径</strong>。<br>共享资源的原始完整路径，可以使用path字段进行发布，务必正确指定。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">path <span class="operator">=</span> 资源的绝对路径</span><br></pre></td></tr></table></figure><p>（4）<strong>设置匿名访问</strong>。<br>这只是否允许对共享资源进行匿名访问。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">public <span class="operator">=</span> yes    <span class="operator">/</span><span class="operator">/</span>允许匿名访问</span><br><span class="line">public <span class="operator">=</span> <span class="keyword">no</span>   <span class="operator">/</span><span class="operator">/</span>不允许匿名访问</span><br></pre></td></tr></table></figure><p>（5）<strong>设置访问用户</strong>。</p><p>如果共享资源存在重要数据的话，需要对访问用户审核，我们可以使用valid users字段进行设置。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">valid users <span class="operator">=</span> 用户名</span><br><span class="line">valid users <span class="operator">=</span> @组名</span><br><span class="line">valid users <span class="operator">=</span> @组名，用户名</span><br></pre></td></tr></table></figure><p>例：samba服务器共享文件为/share/tech目录，只允许组tech，和用户manager访问</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">comment<span class="operator">=</span>users   <span class="operator">/</span><span class="operator">/</span>可不加</span><br><span class="line">path<span class="operator">=</span><span class="operator">/</span>share<span class="operator">/</span>tech</span><br><span class="line">valid users <span class="operator">=</span> <span class="variable">@tech</span>，manager</span><br></pre></td></tr></table></figure><p>(6)<strong>设置目录只读</strong>。</p><p>共享目录如果限制用户的读写操作，我们可以通过read only 实现。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">read <span class="keyword">only</span> <span class="operator">=</span> yes <span class="operator">/</span><span class="operator">/</span>只读</span><br><span class="line">read <span class="keyword">only</span> <span class="operator">=</span> <span class="keyword">no</span>  <span class="operator">/</span><span class="operator">/</span>读写</span><br></pre></td></tr></table></figure><p>例：samba服务器公共目录/public存放大量共享数据，为保证目录安全，我们只允许读取，禁止写入。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">comment <span class="operator">=</span> public</span><br><span class="line">path <span class="operator">=</span> <span class="operator">/</span>public</span><br><span class="line">public <span class="operator">=</span> yes</span><br><span class="line">read <span class="keyword">only</span> <span class="operator">=</span> yes</span><br></pre></td></tr></table></figure><p>(7)<strong>设置目录可写</strong></p><p>如果共享目录允许用户写操作，可以使用writable或write list 两个字段进行设置。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">writable <span class="operator">=</span> yes   <span class="operator">/</span><span class="operator">/</span>读写</span><br><span class="line">writable <span class="operator">=</span> <span class="keyword">no</span>    <span class="operator">/</span><span class="operator">/</span>只读</span><br></pre></td></tr></table></figure><p><strong>write list</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">write list <span class="operator">=</span> 用户名</span><br><span class="line">write list <span class="operator">=</span>@组名</span><br></pre></td></tr></table></figure><h1 id="4、Samba服务密码文件"><a href="#4、Samba服务密码文件" class="headerlink" title="4、Samba服务密码文件"></a>4、Samba服务密码文件</h1><p>samba服务器发布共享资源后<code>，客户端访问samba服务器，需要提交用户名和密码进行身份验证，验证合格才可以登录</code><strong>。Samba服务器为了实现客户身份验证功能，将</strong><code>用户名和密码存放在/etc/samba/smbpasswd</code>中，在客户端访问时，将用户提交的资料与smbpasswd存放的信息进行比对，如果相同，客户端与samba服务器的连接才能建立成功。</p><p><strong><code>那如何建立Samba账号呢</code></strong>。首先我们要创建一个系统账号，例如toto。</p><p>创建完成之后我们使用下方命令在samba服务中创建账号</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">useradd toto     <span class="operator">/</span><span class="operator">/</span>创建系统账号</span><br><span class="line">passwd toto    <span class="operator">/</span><span class="operator">/</span>设置密码</span><br><span class="line">smbpasswd <span class="operator">-</span>a  toto  <span class="operator">/</span><span class="operator">/</span>创建samba服务账号</span><br></pre></td></tr></table></figure><h1 id="5、Share服务器实例解析"><a href="#5、Share服务器实例解析" class="headerlink" title="5、Share服务器实例解析"></a>5、Share服务器实例解析</h1><p>下面我们介绍该如何配置samba的服务端，并顺带做一个项目实例</p><p><strong><code>某公司需要添加samba服务器作为文件服务器，共享目录为/share，共享名为public，这个共享目录允许所有员工访问。</code></strong></p><p>解析：这个共享目录允许所有员工访问，因为我们不知道这个所有他到底是多少，所以为了方便管理，我们直接使用匿名访问，这样会简单很多。</p><ol><li><p>建立share目录，并在其下建立测试文件</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mkdir <span class="operator">/</span>share</span><br><span class="line">toch <span class="operator">/</span>share<span class="operator">/</span>toto</span><br></pre></td></tr></table></figure></li><li><p>修改samba主配置文件smb.conf</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">global</span>]</span><br><span class="line">        workgroup <span class="operator">=</span> SAMBA</span><br><span class="line">        security <span class="operator">=</span> <span class="keyword">user</span></span><br><span class="line">        map <span class="keyword">to</span> guest <span class="operator">=</span> bad <span class="keyword">user</span></span><br><span class="line">        guest ok <span class="operator">=</span> yes</span><br><span class="line">[public]</span><br><span class="line">        path <span class="operator">=</span> <span class="operator">/</span>share</span><br><span class="line">        browseable <span class="operator">=</span> yes</span><br><span class="line">        public <span class="operator">=</span> yes</span><br></pre></td></tr></table></figure></li><li><p>修改文件/share的所有者和权限</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> <span class="operator">~</span>]# mkdir <span class="operator">/</span>share</span><br><span class="line">[root<span class="variable">@localhost</span> <span class="operator">~</span>]# chmod <span class="number">777</span> <span class="operator">/</span>share<span class="operator">/</span></span><br><span class="line">[root<span class="variable">@localhost</span> <span class="operator">~</span>]# chown nobody.nobody <span class="operator">/</span>share</span><br></pre></td></tr></table></figure></li><li><p>重新加载配置文件</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> <span class="operator">~</span>]# systemctl restart smb nmb</span><br></pre></td></tr></table></figure></li><li><p>关闭防火墙和禁用selinux</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> <span class="operator">~</span>]# systemctl stop firewalld</span><br><span class="line">[root<span class="variable">@localhost</span> <span class="operator">~</span>]# setenforce <span class="number">0</span></span><br></pre></td></tr></table></figure></li><li><p>通过以上设置，用户就可以在不输入账户和密码的情况下直接登录samba服务器并访问目录public。</p></li></ol><h1 id="6、samba服务器客户端的配置"><a href="#6、samba服务器客户端的配置" class="headerlink" title="6、samba服务器客户端的配置"></a>6、samba服务器客户端的配置</h1><p>我们可以使用两种不同的方法，在windows客户端和linux客户端之间进行登录samba服务器</p><h2 id="6-1-Linux客户端访问Samba服务器"><a href="#6-1-Linux客户端访问Samba服务器" class="headerlink" title="6.1 Linux客户端访问Samba服务器"></a>6.1 Linux客户端访问Samba服务器</h2><p>使用smbclient命令</p><p><strong><code>我们在使用smbclient时，先要确保安装了samba-client这个软件包。</code></strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">yum install <span class="operator">-</span>y samba<span class="operator">-</span>client</span><br></pre></td></tr></table></figure><p>smbclient可以列出目标主机共享目录列表。格式如下：</p><p>smbclient -L 目标IP地址 -U 登录用户名</p><p>当我们查看IP地址为172.168.1.1的IP地址主机时，不输入用户的话，我们会看到以下内容，这就是表示匿名用户能看到的共享目录列表。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]# smbclient -L <span class="number">172.168</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line"><span class="title class_">Enter</span> <span class="variable constant_">SAMBA</span>\root<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Sharename       Type      Comment</span></span><br><span class="line"><span class="string">        ---------       ----      -------</span></span><br><span class="line"><span class="string">        print$          Disk      Printer Drivers</span></span><br><span class="line"><span class="string">        public          Disk      </span></span><br><span class="line"><span class="string">        IPC$            IPC       IPC Service (Samba 4.10.16)</span></span><br><span class="line"><span class="string">Reconnecting with SMB1 for workgroup listing.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Server               Comment</span></span><br><span class="line"><span class="string">        ---------            -------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Workgroup            Master</span></span><br><span class="line"><span class="string">        ---------            -------</span></span><br><span class="line"><span class="string">        SAMBA                LOCALHOST</span></span><br></pre></td></tr></table></figure><p>我们还可以使用smbclient命令行共享访问模式浏览共享的资料。</p><p>smbclient命令行共享访问模式命令格式：</p><p><strong><code>smbclient //目标IP地址或主机名/共享目录 -U 用户名%密码</code></strong></p><p>例：当samba服务器的共享目录为public并且用户toto可以登录时</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">smbclient <span class="operator">/</span><span class="operator">/</span><span class="number">172.168</span><span class="number">.1</span><span class="number">.1</span><span class="operator">/</span>public <span class="operator">-</span>U toto<span class="operator">%</span><span class="number">123456</span></span><br></pre></td></tr></table></figure><p>例：当samba服务器的共享目录为public并且匿名用户可以登录时</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># smbclient //172.168.1.1/public </span></span><br><span class="line">Enter SAMBA\root<span class="string">&#x27;s password: </span></span><br><span class="line"><span class="string">Try &quot;help&quot; to get a list of possible commands.</span></span><br><span class="line"><span class="string">smb: \&gt; ls</span></span><br><span class="line"><span class="string">  .                                   D        0  Tue May 30 08:56:31 2023</span></span><br><span class="line"><span class="string">  ..                                  D        0  Tue May 30 08:50:38 2023</span></span><br><span class="line"><span class="string">  toto                                D        0  Tue May 30 08:56:31 2023</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                17811456 blocks of size 1024. 15658328 blocks available</span></span><br></pre></td></tr></table></figure><h2 id="6-2-利用windows客户端访问Samba共享目录"><a href="#6-2-利用windows客户端访问Samba共享目录" class="headerlink" title="6.2 利用windows客户端访问Samba共享目录"></a>6.2 利用windows客户端访问Samba共享目录</h2><p>windows客户端访问samba共享目录的方法有很多，这里展示其中两种：</p><p>1.首先我们按住win+R键，然后输入以下内容</p><p><img src="4aee387788b78245df158b9d8fa7bb8e-1714441602239.png" alt="image.png"></p><p>点击确定，我们就可以直接登录samba服务器了</p><p><img src="3203b2291c45d1d73d5a0a4d899d64c9-1714441603268.png" alt="image.png"></p><p>方法二、我们点击此电脑，或者任意文件夹后，点击此电脑。</p><p><img src="8be204532797b51cb35aec251433385b-1714441604555.png" alt="image.png"></p><p>找到映射网络驱动器。</p><p><img src="8c4c452a11f0598a5865fcdb4b9318b0-1714441605811.png" alt="image.png"></p><p>点击，并输入samba服务器的ip地址和共享目录</p><p><img src="d14ddb36686a61e0d9c93b4362c5c96e-1714441607110.png" alt="image.png"></p><p>最后我们就可以登录samba服务器了。</p>]]></content>
      
      
      <categories>
          
          <category> Samba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 网络建设与运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FTP服务器的配置与管理</title>
      <link href="/2024/04/16/FTP%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/"/>
      <url>/2024/04/16/FTP%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%85%8D%E7%BD%AE%E4%B8%8E%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<p>@<a href="文章内容仅仅只是我对FTP的理解！">TOC</a></p><h2 id="FTP简介"><a href="#FTP简介" class="headerlink" title="FTP简介"></a>FTP简介</h2><p>文件传输协议FTP（File Transfer FTP）作为网络共享文件的传输协议，在网络应用软件中具有广泛的应用。</p><p> <strong>FTP协议</strong></p><p>FTP是TCP/IP的协议簇协议之一，其主要功能是借助网络实现远距离主机间的文件传输。</p><h2 id="1-使用Vsftpd服务器"><a href="#1-使用Vsftpd服务器" class="headerlink" title="1.使用Vsftpd服务器"></a>1.使用Vsftpd服务器</h2><p>Vsftpd （Very Secure FTP）是linux系统的常用软件。</p><h3 id="1-1-Vsftpd的服务器的安装与启动"><a href="#1-1-Vsftpd的服务器的安装与启动" class="headerlink" title="1.1 Vsftpd的服务器的安装与启动"></a>1.1 Vsftpd的服务器的安装与启动</h3><p>Vsftpd在yum源中的名称就是叫做vsftpd</p><p>yum install -y vsftpd*  //*代表下载所有关于vsftpd的软件包</p><h3 id="1-2-Vsftpd服务器的用户类型"><a href="#1-2-Vsftpd服务器的用户类型" class="headerlink" title="1.2 Vsftpd服务器的用户类型"></a>1.2 Vsftpd服务器的用户类型</h3><p>Vsftpd的用户类型主要分为匿名用户、本地用户和虚拟用户。</p><p>（1）匿名用户：如果Vsftpd服务器提供匿名访问功能，默认的匿名访问用户为anonymous或ftp，密码为空，匿名用户登录后进入到工作目录是/var/ftp</p><p>（2）本地用户：本地用户信息存储在/etc/passwd文件中，本地用户输入用户名和密码后可登录vsftpd，并且直接进入该用户的宿主目录。</p><p>（3）虚拟用户：旨在vsftpd服务器中拥有账号，并且该账号只能用于文件传输服务的专有用户，也称guest用户。该类用户可以通过输入用户名和密码进行授权登录。</p><h2 id="2-Vsftpd服务器的测试"><a href="#2-Vsftpd服务器的测试" class="headerlink" title="2. Vsftpd服务器的测试"></a>2. Vsftpd服务器的测试</h2><p><strong>FTP服务器的运行模式基于服务器、客户端，服务器安装完Vsftpd软件包后，可以通过客户端进行测试。</strong></p><p>1.首先下载vsftpd与其相关的服务</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">yum install -y vsftpd* ftp*</span><br></pre></td></tr></table></figure><p>2.然后打开ftp服务的端口，使防火墙放行ftp服务</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=<span class="number">21</span>/tcp --per</span><br><span class="line">systemctl restart vsftpd firewalld</span><br></pre></td></tr></table></figure><p>3.在虚拟机上以匿名用户身份进行测试，使用ftp命令，后面输入本机的ip地址，用户名是ftp，密码是空，登录过程如下。</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[root@linux2 ~]</span># ftp <span class="number">192.168</span>.<span class="number">123.102</span></span><br><span class="line">Connected <span class="selector-tag">to</span> <span class="number">192.168</span>.<span class="number">123.102</span> (<span class="number">192.168</span>.<span class="number">123.102</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span>.<span class="number">2</span>)</span><br><span class="line">Name (<span class="number">192.168</span>.<span class="number">123.102</span><span class="selector-pseudo">:root</span>): ftp</span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line">Password:</span><br><span class="line"><span class="number">230</span> Login successful. </span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt;</span><br><span class="line">ftp&gt; ls</span><br></pre></td></tr></table></figure><p>以上命令中的192.168.123.102是vsftpd服务器的ip地址</p><p>终端打印信息“230 Login successful. ”说明登录成功</p><h2 id="3-FTP常用的命令"><a href="#3-FTP常用的命令" class="headerlink" title="3.FTP常用的命令"></a>3.FTP常用的命令</h2><div class="table-container"><table><thead><tr><th style="text-align:left">命令</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">ls</td><td style="text-align:left">查看服务器当前目录的文件</td></tr><tr><td style="text-align:left">mkdir 【目录名】</td><td style="text-align:left">在服务器新建目录</td></tr><tr><td style="text-align:left">put 文件名</td><td style="text-align:left">向服务器上传指定的一个文件</td></tr><tr><td style="text-align:left">mput  文件名列表</td><td style="text-align:left">向服务器上传多个文件</td></tr><tr><td style="text-align:left">chmod</td><td style="text-align:left">改变服务器中的文件权限</td></tr><tr><td style="text-align:left">？或help</td><td style="text-align:left">显示内部命令的帮助信息</td></tr><tr><td style="text-align:left">open 域名或IP地址</td><td style="text-align:left">建立于指定服务器的连接</td></tr><tr><td style="text-align:left">close</td><td style="text-align:left">终止远端的进程，返回命令状态</td></tr><tr><td style="text-align:left">bye或quit</td><td style="text-align:left">推出服务器</td></tr><tr><td style="text-align:left"></td></tr></tbody></table></div><h2 id="4-Vsftp服务器的配置文件"><a href="#4-Vsftp服务器的配置文件" class="headerlink" title="4.Vsftp服务器的配置文件"></a>4.Vsftp服务器的配置文件</h2><p>&#x9;配置基本的Vsftpd服务器比较简单，只需要正确安装了Vsftpd软件，直接启动Vsftpd并放行端口就行了，但是如果想要更进一步的搭建Vsftpd服务，那就要掌握Vsftpd服务器的配置文件。</p><div class="table-container"><table><thead><tr><th style="text-align:left">文件</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">/etc/vsftpd/vsftpd.conf</td><td style="text-align:left">Vsftpd服务器主配置文件</td></tr><tr><td style="text-align:left">/etc/vsftpd/ftpusers</td><td style="text-align:left">禁止访问Vsftp服务器的用户名单</td></tr><tr><td style="text-align:left">/etc/vsftpd/user_list</td><td style="text-align:left">指定用户能否访问FTP服务器取决于userlist_deny选项的设置</td></tr><tr><td style="text-align:left">/etc/vsftpd/chroot_list</td><td style="text-align:left">目录访问控制文件</td></tr></tbody></table></div><p>下面对这几个文件进行详细说明</p><h3 id="1-vsftpd-conf文件"><a href="#1-vsftpd-conf文件" class="headerlink" title="1.vsftpd.conf文件"></a>1.vsftpd.conf文件</h3><p>vsftpd.conf位于/etc/vsftpd目录下，与大多数配置文件一样，vsftpd.conf文件中以符号”#“开始注释信息，我们可以用Vim等工具对它进行修改。在Vsftpd中去掉注释，显示该文件的配置内容如下：</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">[root<span class="meta">@linux2</span> ~]# grep -v <span class="string">&quot;#&quot;</span> /etc/vsftpd/vsftpd.<span class="property">conf</span></span><br><span class="line">anonymous_enable=<span class="variable constant_">YES</span></span><br><span class="line">local_enable=<span class="variable constant_">YES</span></span><br><span class="line">write_enable=<span class="variable constant_">YES</span></span><br><span class="line">local_umask=<span class="number">022</span></span><br><span class="line">dirmessage_enable=<span class="variable constant_">YES</span></span><br><span class="line">xferlog_enable=<span class="variable constant_">YES</span></span><br><span class="line">connect_from_port_20=<span class="variable constant_">YES</span></span><br><span class="line">xferlog_std_format=<span class="variable constant_">YES</span></span><br><span class="line">listen=<span class="variable constant_">NO</span></span><br><span class="line">listen_ipv6=<span class="title class_">YESpam</span>_service_name=vsftpd</span><br><span class="line">userlist_enable=<span class="variable constant_">YES</span></span><br><span class="line">tcp_wrappers=<span class="variable constant_">YES</span></span><br></pre></td></tr></table></figure><p>下面对该文件中的常用选项进行介绍，合理使用这些选项是保障FTP安全稳定的前提</p><div class="table-container"><table><thead><tr><th style="text-align:left">选项</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">anonymous_enable</td><td style="text-align:left">设置是否允许匿名用户登录服务器</td></tr><tr><td style="text-align:left">local_enable</td><td style="text-align:left">设置是否允许本地用户登录服务器</td></tr><tr><td style="text-align:left">write_enable</td><td style="text-align:left">设置是否允许写操作</td></tr><tr><td style="text-align:left">local_umask</td><td style="text-align:left">设置本地用户创建文件的umask值</td></tr><tr><td style="text-align:left">anon*_upload_enable*</td><td style="text-align:left">设置是否允许匿名用户上传文件</td></tr><tr><td style="text-align:left">anon*_mkdir_write_enable*</td><td style="text-align:left">设置是否允许匿名用户建立目录</td></tr><tr><td style="text-align:left">xferlog_enable</td><td style="text-align:left">是否激活日志功能</td></tr><tr><td style="text-align:left">chown_uploads</td><td style="text-align:left">修改匿名用户上传文件的所有者</td></tr><tr><td style="text-align:left">chown_username=whoever</td><td style="text-align:left">启用chown_uploads=YES时，指定为主用户账户，whoever表示你的ftp用户</td></tr><tr><td style="text-align:left">chroot*_local_user*</td><td style="text-align:left">设置是否将所有用户限制在其主目录</td></tr><tr><td style="text-align:left">chroot*_list_enable*</td><td style="text-align:left">设置是否启用限制用户的名单</td></tr><tr><td style="text-align:left">chroot*_list_file*</td><td style="text-align:left">设置是否限制/排除主目录下的用户名单，限制/排除有chroot<em>local</em>user值决定</td></tr><tr><td style="text-align:left">allow*_writeable_choot*</td><td style="text-align:left">设置chroot目录的写权限</td></tr></tbody></table></div><h3 id="2-ftpusers文件"><a href="#2-ftpusers文件" class="headerlink" title="2.ftpusers文件"></a>2.ftpusers文件</h3><p>&#x9;/etc/vsftpd/ftpusers文件用于指定不能访问vsftp服务器的用户列表，此文件在格式中采用每个用户一行的形式，其中包含的用户通常是系统的超级用户和系统用户</p><h3 id="3-user-list文件"><a href="#3-user-list文件" class="headerlink" title="3.user_list文件"></a>3.user_list文件</h3><p>&#x9;/etc/vsftpd/user<em>list 文件也用于保留用户列表，指定的用户能否访问vsftp服务取决于userlistdeny选项的参数，当userlist_deny选项的参数=YES时，此文件中写入的所有用户都将无法登录vsftp服务，想都别想，但是当userlist_deny=No时，这些用户就起来了，那就表示只有这些用户能够访问vsftp服务，所以一定要注意这个选项的参数。非常重要。</em></p><p>如果要限制一些指定的本地用户不能访问FTP服务，则可以添加以下内容来做到：</p><blockquote><p>进入/etc/vaftpd/vsftpd.conf 末行添加</p><p>userlist_enable=YES</p><p>userlist_deny=YES</p><p>userlist<em>file=/etc/vsftpd/user</em>_list</p><p>进入/etc/vsftpd/user_list 添加你需要拒绝访问的本地用户&#x20;</p><p>toto (意为指定用户 每个指定用户单独占一行)</p></blockquote><p>如果需要指定几个本地用户才能访问FTP服务，则可以添加以下内容来做到：</p><blockquote><p>进入/etc/vaftpd/vsftpd.conf 末行添加</p><p>userlist_enable=YES</p><p>userlist_deny=NO</p><p>userlist<em>file=/etc/vsftpd/user</em>_list</p><p>进入/etc/vsftpd/user_list 添加你需要拒绝访问的本地用户</p><p>toto (意为指定用户 每个指定用户单独占一行)</p></blockquote><h3 id="4-chroot-list文件"><a href="#4-chroot-list文件" class="headerlink" title="4.chroot_list文件"></a>4.chroot_list文件</h3><p>&#x20; 默认情况下，匿名用户会被锁定在默认FTP目录中，而本地用户却可以访问自己主目录以外的内容，出于安全考虑，通过chroot_list文件可以限制用户只能访问其主目录，也可以实现使用不同哟ing胡不仅能访问自己的目录也可以访问主目录以外的内容。</p><p>&#x20; chroot<em>list文件设计chrootlocal</em>user和chroot*_list_enable两个选项*</p><p>&#x20; chroot*_list_file默认指向/etc/ sftpd/chroot_list*</p><p>&#x9;    chroot_list文件的功能有两个</p><ul><li>是限制用户名单中的用户只能在其主目录中</li></ul><!----><ul><li>名单中的用户不仅能访问自己的主目录，还能跳出主目录，访问其它的目录。</li></ul><blockquote><p>当chroot*_list_enable=YES时，chroot_list中的用户只能在本目录中*</p><p>当chroot*_list_enable=NO时，chroot_list中的目录可以访问除主目录以外的内容*</p></blockquote><h2 id="5-Vsftp服务器的使用"><a href="#5-Vsftp服务器的使用" class="headerlink" title="5.Vsftp服务器的使用"></a>5.Vsftp服务器的使用</h2><p>前面介绍了Vsftpd服务器的安装，启动及主要的配置文件，下面通过具体的实例来介绍该服务器的具体应用。</p><h3 id="1-匿名用户访问Vsfto服务器"><a href="#1-匿名用户访问Vsfto服务器" class="headerlink" title="1.匿名用户访问Vsfto服务器"></a>1.匿名用户访问Vsfto服务器</h3><p>本次实验环境为Centos7 服务器的IP地址为192.168.123.101 主机名为linux1</p><p>第一步：安装Vsftp服务及开启该服务</p><blockquote><p>yum install -y vsftpd<br>systemctl restart vsftpd</p></blockquote><p>使用ftp匿名用户登录，如下所示：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[root@linux2 ~]# ftp <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span></span><br><span class="line"><span class="title class_">Connected</span> to <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span> (<span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span><span class="number">.2</span>)</span><br><span class="line"><span class="title class_">Name</span> (<span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span>:root): ftp</span><br><span class="line"><span class="number">331</span> <span class="title class_">Please</span> specify the password.</span><br><span class="line"><span class="title class_">Password</span>:</span><br><span class="line"><span class="number">230</span> <span class="title class_">Login</span> successful.</span><br><span class="line"><span class="title class_">Remote</span> system type is <span class="variable constant_">UNIX</span>.</span><br><span class="line"><span class="title class_">Using</span> binary mode to transfer files.</span><br><span class="line">ftp&gt;</span><br><span class="line">ftp&gt; ls</span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">101</span>,<span class="number">29</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Here</span> comes the directory listing.</span><br><span class="line">drwxr-xr-x    <span class="number">2</span> <span class="number">0</span>        <span class="number">0</span>               <span class="number">6</span> <span class="title class_">Oct</span> <span class="number">13</span>  <span class="number">2020</span> pub</span><br><span class="line"><span class="number">226</span> <span class="title class_">Directory</span> send <span class="variable constant_">OK</span>.</span><br></pre></td></tr></table></figure><p>登录成功，使用ls命令浏览默认的FTP目录 （/var/ftp）</p><blockquote><p>1、首先在FTP默认目录/var/pub中创建两个文本文件1.txt和2.txt</p><p>[root\@ayaka ~]# cd /var/ftp/pub/</p><p>[root\@ayaka pub]# touch 1.txt</p><p>[root\@ayaka pub]# touch 2.txt</p><p>[root\@ayaka pub]# ls<br>1.txt  2.txt</p><p>2、在客户端上进入/pub目录</p><p>ftp&gt; ls<br>227 Entering Passive Mode (192,168,123,101,75,103).<br>150 Here comes the directory listing.<br>-rw-r—r—    1 0        0               0 May 09 10:37 1.txt<br>-rw-r—r—    1 0        0               0 May 09 10:37 2.txt</p></blockquote><p>将Vsftpd服务器上文件下载到客户端</p><p>进入pub目录 使用get命令将文件1.txt与2.txt下载到当前目录下，下载成功的过程如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span><span class="number">.2</span>)</span><br><span class="line"><span class="title class_">Name</span> (<span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span>:root): ftp</span><br><span class="line"><span class="number">331</span> <span class="title class_">Please</span> specify the password.</span><br><span class="line"><span class="title class_">Password</span>:</span><br><span class="line"><span class="number">230</span> <span class="title class_">Login</span> successful.</span><br><span class="line"><span class="title class_">Remote</span> system type is <span class="variable constant_">UNIX</span>.</span><br><span class="line"><span class="title class_">Using</span> binary mode to transfer files.</span><br><span class="line">ftp&gt; cd pub</span><br><span class="line"><span class="number">250</span> <span class="title class_">Directory</span> successfully changed.</span><br><span class="line">ftp&gt; ls</span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">25</span>,<span class="number">132</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Here</span> comes the directory listing.</span><br><span class="line">-rw-r--r--    <span class="number">1</span> <span class="number">0</span>        <span class="number">0</span>              <span class="number">50</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">10</span>:<span class="number">54</span> <span class="number">1.</span>txt</span><br><span class="line">-rw-r--r--    <span class="number">1</span> <span class="number">0</span>        <span class="number">0</span>               <span class="number">0</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">10</span>:<span class="number">37</span> <span class="number">2.</span>txt</span><br><span class="line"><span class="number">226</span> <span class="title class_">Directory</span> send <span class="variable constant_">OK</span>.</span><br><span class="line">ftp&gt; !pwd</span><br><span class="line">/root</span><br><span class="line">ftp&gt; get <span class="number">1.</span>txt</span><br><span class="line"><span class="attr">local</span>: <span class="number">1.</span>txt <span class="attr">remote</span>: <span class="number">1.</span>txt</span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">145</span>,<span class="number">74</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Opening</span> <span class="variable constant_">BINARY</span> mode data connection <span class="keyword">for</span> <span class="number">1.</span>txt (<span class="number">50</span> bytes).</span><br><span class="line"><span class="number">226</span> <span class="title class_">Transfer</span> complete.</span><br><span class="line"><span class="number">50</span> bytes received <span class="keyword">in</span> <span class="number">0.000134</span> secs (<span class="number">373.13</span> <span class="title class_">Kbytes</span>/sec)</span><br><span class="line">ftp&gt; !ls</span><br><span class="line"><span class="number">1</span>  <span class="number">1.</span>txt  anaconda-ks.<span class="property">cfg</span></span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>测试在Vsftp服务器创建目录</p><blockquote><p>ftp&gt; mkdir toto<br>550 Permission denied.<br>ftp</p></blockquote><p>通过以上操作可以得出：在默认情况下，匿名用户一般只有从服务器服务器下载文件的权限，不能上传文件或进行其它操作</p><p>那如何让他变得有权限呢，接下来我们来配置vsftpd使得有上传文件或进行其它操作</p><p>更改vsftpd.conf文件，开启匿名用户上传，创建目录权限</p><p><strong>将如下两个参数取消注释</strong></p><blockquote><p>29 #anon_upload_enable=YES  //允许匿名文件上传文件</p><p>34 #anon_mkdir_write_enable=YES  //允许匿名用户建立目录</p></blockquote><p>取消注释后保存并退出 重启vsftpd服务让它生效</p><blockquote><p>systemctl restart vsftpd</p></blockquote><p>创建匿名用户上传目录</p><p>需要在/var/ftp目录下创建一个目录，修改目录的权限，让匿名用户具有写权限</p><blockquote><p>[root\@ayaka pub]# mkdir /var/ftp/hub<br>[root\@ayaka pub]# chmod o+w /var/ftp/hub</p></blockquote><p>上传目录</p><p>使用put命令把本地文件上传到FTP服务器上，具体过程如下。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[root@linux2 ~]# ftp <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span></span><br><span class="line"><span class="title class_">Connected</span> to <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span> (<span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span><span class="number">.2</span>)</span><br><span class="line"><span class="title class_">Name</span> (<span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span>:root): ftp</span><br><span class="line"><span class="number">331</span> <span class="title class_">Please</span> specify the password.</span><br><span class="line"><span class="title class_">Password</span>:</span><br><span class="line"><span class="number">230</span> <span class="title class_">Login</span> successful.</span><br><span class="line"><span class="title class_">Remote</span> system type is <span class="variable constant_">UNIX</span>.</span><br><span class="line"><span class="title class_">Using</span> binary mode to transfer files.</span><br><span class="line">ftp&gt; cd hub        <span class="comment">//进入目录hub </span></span><br><span class="line"><span class="number">250</span> <span class="title class_">Directory</span> successfully changed.</span><br><span class="line">ftp&gt; !ls      <span class="comment">//执行本机Shell命令，显示当前内容 </span></span><br><span class="line"><span class="number">1</span>  <span class="number">1.</span>txt  anaconda-ks.<span class="property">cfg</span>  file1.<span class="property">txt</span></span><br><span class="line">ftp&gt; put <span class="number">1</span>       <span class="comment">//上传文件1</span></span><br><span class="line"><span class="attr">local</span>: <span class="number">1</span> <span class="attr">remote</span>: <span class="number">1</span></span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">176</span>,<span class="number">227</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Ok</span> to send data.</span><br><span class="line"><span class="number">226</span> <span class="title class_">Transfer</span> complete.</span><br><span class="line"><span class="number">1664</span> bytes sent <span class="keyword">in</span> <span class="number">0.000814</span> secs (<span class="number">2044.23</span> <span class="title class_">Kbytes</span>/sec)</span><br><span class="line">ftp&gt; ls -l          <span class="comment">//查看hub目录中的文件列表</span></span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">85</span>,<span class="number">50</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Here</span> comes the directory listing.</span><br><span class="line">-rw-------    <span class="number">1</span> <span class="number">14</span>       <span class="number">50</span>           <span class="number">1664</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">26</span> <span class="number">1</span></span><br><span class="line"><span class="number">226</span> <span class="title class_">Directory</span> send <span class="variable constant_">OK</span>.</span><br><span class="line">ftp&gt; mkdir tomato      <span class="comment">//创建目录</span></span><br><span class="line"><span class="number">257</span> <span class="string">&quot;/hub/tomato&quot;</span> created        <span class="comment">//创建目录成功</span></span><br><span class="line">ftp&gt; ls</span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">18</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Here</span> comes the directory listing.</span><br><span class="line">-rw-------    <span class="number">1</span> <span class="number">14</span>       <span class="number">50</span>           <span class="number">1664</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">26</span> <span class="number">1</span></span><br><span class="line">drwx------    <span class="number">2</span> <span class="number">14</span>       <span class="number">50</span>              <span class="number">6</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">35</span> tomato</span><br><span class="line"><span class="number">226</span> <span class="title class_">Directory</span> send <span class="variable constant_">OK</span>.</span><br><span class="line">ftp&gt; </span><br></pre></td></tr></table></figure><h3 id="2-本地用户访问Vsftp服务器"><a href="#2-本地用户访问Vsftp服务器" class="headerlink" title="2.本地用户访问Vsftp服务器"></a>2.本地用户访问Vsftp服务器</h3><p>本地用户是在FTP服务器上拥有用户账户的用户，相当于FTP服务器中的真实实际用户，其通过输入自己的账号和口令来进行授权登录，当用户成功登录服务器后，其登录目录为用户的主目录，用户的权限对该主目录的操作权限，可以下载也可以上传文件。</p><p>下面我们将用实例来介绍本地用户登录服务器下载，上传文件的过程。</p><p>本地用户访问Vsftp服务器，本例Vsftp服务器的ip地址为192.168.123.101 客户端主机名为Client</p><p>Vsftp服务器建立用户ftpuser，并在用户的家目录建立文件toto和yoyo 命令如下</p><blockquote><p>[root\@ayaka pub]# useradd ftpuser</p><p>[root\@ayaka pub]# echo “123” | passwd —stdin ftpuser   //设置ftpuser的密码为123</p><p>[root\@ayaka pub]# su - ftpuser                //登录用户ftpuser</p><p>[ftpuser\@ayaka ~]$ touch toto.txt</p><p>[ftpuser\@ayaka ~]$ touch yoyo.txt</p></blockquote><p>使用本地用户登录Vsftpd服务器后，其登录目录为用户的主目录/home/ftpuser，具体过程如下</p><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span>root@linux2 ~<span class="punctuation">]</span># ftp <span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span></span><br><span class="line">Connected to <span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span> (<span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span><span class="number">.2</span>)</span><br><span class="line">Name (<span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span><span class="punctuation">:</span>root)<span class="punctuation">:</span> ftpuser</span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line">Password<span class="punctuation">:</span></span><br><span class="line"><span class="number">530</span> Login incorrect.</span><br><span class="line">Login failed.</span><br><span class="line">ftp&gt; ^Z</span><br><span class="line"><span class="punctuation">[</span><span class="number">2</span><span class="punctuation">]</span>+  已停止               ftp <span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span></span><br><span class="line"><span class="punctuation">[</span>root@linux2 ~<span class="punctuation">]</span>#</span><br><span class="line"><span class="punctuation">[</span>root@linux2 ~<span class="punctuation">]</span># ftp <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span></span><br><span class="line">Connected to <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span> (<span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span>).</span><br><span class="line"><span class="number">220</span> (vsFTPd <span class="number">3.0</span><span class="number">.2</span>)</span><br><span class="line">Name (<span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span><span class="punctuation">:</span>root)<span class="punctuation">:</span> ftpuser</span><br><span class="line"><span class="number">331</span> Please specify the password.</span><br><span class="line">Password<span class="punctuation">:</span></span><br><span class="line"><span class="number">230</span> Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line">ftp&gt; ls</span><br><span class="line"><span class="number">227</span> Entering Passive Mode (<span class="number">192</span><span class="punctuation">,</span><span class="number">168</span><span class="punctuation">,</span><span class="number">123</span><span class="punctuation">,</span><span class="number">101</span><span class="punctuation">,</span><span class="number">56</span><span class="punctuation">,</span><span class="number">176</span>).</span><br><span class="line"><span class="number">150</span> Here comes the directory listing.</span><br><span class="line">-rw-rw-r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">0</span> May <span class="number">09</span> <span class="number">11</span><span class="punctuation">:</span><span class="number">44</span> toto.txt</span><br><span class="line">-rw-rw-r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">0</span> May <span class="number">09</span> <span class="number">11</span><span class="punctuation">:</span><span class="number">44</span> yoyo.txt</span><br><span class="line"><span class="number">226</span> Directory send OK.</span><br><span class="line">ftp&gt; pwd</span><br><span class="line"><span class="number">257</span> <span class="string">&quot;/home/ftpuser&quot;</span></span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>创建目录</p><p>用户ftpuser创建目录tomato，具体操作如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ftp&gt; mkdir tomato</span><br><span class="line"><span class="number">257</span> <span class="string">&quot;/home/ftpuser/tomato&quot;</span> created</span><br><span class="line">ftp&gt; ls</span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">244</span>,<span class="number">9</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Here</span> comes the directory listing.</span><br><span class="line">drwxr-xr-x    <span class="number">2</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">6</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">52</span> tomato</span><br><span class="line">-rw-rw-r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">0</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">44</span> toto.<span class="property">txt</span></span><br><span class="line">-rw-rw-r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">0</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">44</span> yoyo.<span class="property">txt</span></span><br><span class="line"><span class="number">226</span> <span class="title class_">Directory</span> send <span class="variable constant_">OK</span>.</span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>上传本地文件</p><p>用户ftpuser上传本地文件到服务器指定目录，具体操作如下：</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ftp&gt; !ls -l</span><br><span class="line">总用量 <span class="number">16</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">1664</span> <span class="number">10</span>月 <span class="number">23</span> <span class="number">2020</span> <span class="number">1</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root   <span class="number">50</span> <span class="number">5</span>月   <span class="number">9</span> <span class="number">18</span>:<span class="number">56</span> <span class="number">1.</span>txt</span><br><span class="line">-rw-------. <span class="number">1</span> root root <span class="number">1295</span> <span class="number">5</span>月   <span class="number">7</span> <span class="number">19</span>:<span class="number">16</span> anaconda-ks.cfg</span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root    <span class="number">7</span> <span class="number">5</span>月   <span class="number">9</span> <span class="number">19</span>:<span class="number">20</span> file1.txt</span><br><span class="line">ftp&gt; !pwd</span><br><span class="line">/root</span><br><span class="line">ftp&gt; put anaconda-ks.cfg        //上传本地文件</span><br><span class="line">local: anaconda-ks.cfg remote: anaconda-ks.cfg</span><br><span class="line"><span class="number">227</span> Entering Passive Mode (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">101</span>,<span class="number">125</span>).</span><br><span class="line"><span class="number">150</span> Ok to send data.</span><br><span class="line"><span class="number">226</span> Transfer complete.</span><br><span class="line"><span class="number">1295</span> <span class="built_in">bytes</span> sent <span class="keyword">in</span> <span class="number">0.00108</span> secs (<span class="number">1194.65</span> Kbytes/sec)</span><br><span class="line">ftp&gt; ls -l        //浏览远程目录，验证上传文件是否为本地文件</span><br><span class="line"><span class="number">227</span> Entering Passive Mode (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">149</span>,<span class="number">213</span>).</span><br><span class="line"><span class="number">150</span> Here comes the directory listing.</span><br><span class="line">-rw-r--r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>         <span class="number">1295</span> May 09 <span class="number">11</span>:<span class="number">55</span> anaconda-ks.cfg</span><br><span class="line">drwxr-xr-x    <span class="number">2</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">6</span> May 09 <span class="number">11</span>:<span class="number">52</span> tomato</span><br><span class="line">-rw-rw-r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">0</span> May 09 <span class="number">11</span>:<span class="number">44</span> toto.txt</span><br><span class="line">-rw-rw-r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">0</span> May 09 <span class="number">11</span>:<span class="number">44</span> yoyo.txt</span><br><span class="line"><span class="number">226</span> Directory send OK.</span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure><p>下载服务器文件到本地</p><p>用ftpuser下载文件toto到本地当前目录下，下载文件yoyo到本地目录/tmp下，并且重命名为toto.bak 具体操作如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ftp&gt; get toto</span><br><span class="line"><span class="attr">local</span>: toto <span class="attr">remote</span>: toto</span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">206</span>,<span class="number">168</span>).</span><br><span class="line"><span class="number">550</span> <span class="title class_">Failed</span> to open file.</span><br><span class="line">ftp&gt; ls</span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">98</span>,<span class="number">221</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Here</span> comes the directory listing.</span><br><span class="line">-rw-r--r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>         <span class="number">1295</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">55</span> anaconda-ks.<span class="property">cfg</span></span><br><span class="line">drwxr-xr-x    <span class="number">2</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">6</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">52</span> tomato</span><br><span class="line">-rw-rw-r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">0</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">44</span> toto.<span class="property">txt</span></span><br><span class="line">-rw-rw-r--    <span class="number">1</span> <span class="number">1000</span>     <span class="number">1000</span>            <span class="number">0</span> <span class="title class_">May</span> <span class="number">09</span> <span class="number">11</span>:<span class="number">44</span> yoyo.<span class="property">txt</span></span><br><span class="line"><span class="number">226</span> <span class="title class_">Directory</span> send <span class="variable constant_">OK</span>.</span><br><span class="line">ftp&gt; get toto.<span class="property">txt</span>           <span class="comment">//下载文件到本地目录 </span></span><br><span class="line"><span class="attr">local</span>: toto.<span class="property">txt</span> <span class="attr">remote</span>: toto.<span class="property">txt</span></span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">46</span>,<span class="number">209</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Opening</span> <span class="variable constant_">BINARY</span> mode data connection <span class="keyword">for</span> toto.<span class="property">txt</span> (<span class="number">0</span> bytes).</span><br><span class="line"><span class="number">226</span> <span class="title class_">Transfer</span> complete.</span><br><span class="line">ftp&gt; !ls -l          <span class="comment">//浏览本地目录，验证下载文件操作是否成功</span></span><br><span class="line">总用量 <span class="number">16</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root <span class="number">1664</span> <span class="number">10</span>月 <span class="number">23</span> <span class="number">2020</span> <span class="number">1</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root   <span class="number">50</span> <span class="number">5</span>月   <span class="number">9</span> <span class="number">18</span>:<span class="number">56</span> <span class="number">1.</span>txt</span><br><span class="line">-rw-------. <span class="number">1</span> root root <span class="number">1295</span> <span class="number">5</span>月   <span class="number">7</span> <span class="number">19</span>:<span class="number">16</span> anaconda-ks.<span class="property">cfg</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root    <span class="number">7</span> <span class="number">5</span>月   <span class="number">9</span> <span class="number">19</span>:<span class="number">20</span> file1.<span class="property">txt</span></span><br><span class="line">-rw-r--r--. <span class="number">1</span> root root    <span class="number">0</span> <span class="number">5</span>月   <span class="number">9</span> <span class="number">19</span>:<span class="number">59</span> toto.<span class="property">txt</span></span><br><span class="line"><span class="comment">// 下载文件yoyo.txt 到 本地目录/tmp下 并重命名为yoyo.bak</span></span><br><span class="line">tp&gt; get yoyo.<span class="property">txt</span> /tmp/yoyo.<span class="property">bak</span></span><br><span class="line"><span class="attr">local</span>: <span class="regexp">/tmp/y</span>oyo.<span class="property">bak</span> <span class="attr">remote</span>: yoyo.<span class="property">txt</span></span><br><span class="line"><span class="number">227</span> <span class="title class_">Entering</span> <span class="title class_">Passive</span> <span class="title class_">Mode</span> (<span class="number">192</span>,<span class="number">168</span>,<span class="number">123</span>,<span class="number">101</span>,<span class="number">46</span>,<span class="number">136</span>).</span><br><span class="line"><span class="number">150</span> <span class="title class_">Opening</span> <span class="variable constant_">BINARY</span> mode data connection <span class="keyword">for</span> yoyo.<span class="property">txt</span> (<span class="number">0</span> bytes).</span><br><span class="line"><span class="number">226</span> <span class="title class_">Transfer</span> complete.</span><br><span class="line">ftp&gt; lcd /tmp   进入本地目录/tmp </span><br><span class="line"><span class="title class_">Local</span> directory now /tmp</span><br><span class="line">ftp&gt; !ls   <span class="comment">//浏览验证本地目录是否有yoyo.bak </span></span><br><span class="line">ks-script-e7_otA                                                         yoyo.<span class="property">bak</span></span><br><span class="line">systemd-private-7da9c4fa89d64f18a66b1cf3053c3ff6-chronyd.<span class="property">service</span>-<span class="title class_">JoFutU</span>  yum.<span class="property">log</span></span><br><span class="line">vmware-root_797-<span class="number">4257069498</span></span><br><span class="line">ftp&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> FTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 网络建设与运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ansible自动化运维服务器的部署</title>
      <link href="/2024/04/16/Ansible%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
      <url>/2024/04/16/Ansible%E8%87%AA%E5%8A%A8%E5%8C%96%E8%BF%90%E7%BB%B4%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>@<a href="这里写目录标题">TOC</a></p><h1 id="Ansible自动化运维"><a href="#Ansible自动化运维" class="headerlink" title="Ansible自动化运维"></a>Ansible自动化运维</h1><h2 id="人工运维时代"><a href="#人工运维时代" class="headerlink" title="人工运维时代"></a>人工运维时代</h2><p>运维人员早期需要维护数量众多的机器，因此需要执行反复，重复的劳动力。很多机器需要部署相同的服务或是执行相同的命令，还得反复的登录不同的机器。</p><h2 id="自动化运维时代"><a href="#自动化运维时代" class="headerlink" title="自动化运维时代"></a>自动化运维时代</h2><p>早期运维人员会结合ssh免密登录和shell脚本来完成自动化的部署操作。</p><p>系统管理员早期面临的问题主要是，配置管理系统，远程执行命令，批量安装服务，启停服务等。</p><p>后来也就诞生了众多开源的软件，自动化运维软件。</p><ul><li>fabric</li><li>puppet</li><li>saltstack</li><li>chef</li><li>Ansible  </li></ul><h2 id="自动化运维趋势"><a href="#自动化运维趋势" class="headerlink" title="自动化运维趋势"></a>自动化运维趋势</h2><p>人肉运维 &gt; 人力运维 &gt; 自动化运维 &gt; 数据化运维 &gt; 可视化运维 &gt; AI智能运维</p><h2 id="自动化运维的好处"><a href="#自动化运维的好处" class="headerlink" title="自动化运维的好处"></a>自动化运维的好处</h2><ul><li>提高工作效率吧 减少重复性的劳动新操作</li><li>大大的减少了人为出错的可能性</li><li>ansible支持数据化管理，数据化追源，找到问题的源点</li></ul><p><img src="image-20231107201445823-1714441954900.png" alt="image-20231107201445823"></p><h1 id="ansible介绍"><a href="#ansible介绍" class="headerlink" title="ansible介绍"></a>ansible介绍</h1><p>ansible是一个同时管理多个远程主机的软件，必须是任意可以同股票ssh登录的机器</p><ul><li>远程虚拟机</li><li>物理机</li><li>也可以直接管理本地机器</li></ul><p>ansible通过ssh协议实现了，管理节点（老板），被管理节点（员工）的通信。</p><p>只要是通过ssh协议登录的主机，就可以完成ansible自动化部署操作</p><ul><li>批量文件分发</li><li>批量数据复制</li><li>批量数据修改、删除</li><li>批量自动化安装软件服务</li><li>批量服务启动停止</li><li>脚本话，自动化批量服务器部署</li></ul><h2 id="ansible的特点"><a href="#ansible的特点" class="headerlink" title="ansible的特点"></a>ansible的特点</h2><p>ansible的编排引擎可以出色的完成各种任务配置管理，ansible在流程控制，资源部署等方便很强大，并且ansible无需安装客户端软件，管理简洁，使用yaml配置文件语法，功能强大，便于维护。</p><p>ansible基于python语言开发的，主要由python的两个ssh处理模块，paramiko，以及PyYAML模块</p><ul><li>安装部署简单</li><li>管理主机边界，支持多台主机并行管理</li><li>无需安装被管理节点的客户端 （no agent），且无需占用客户端的其它端口，仅仅使用ssh服务即可</li><li>不仅仅支持python，还支持其它语言的二次开发</li><li>不用root用户也可以执行，降低系统权限</li></ul><h2 id="Ansible实践部署"><a href="#Ansible实践部署" class="headerlink" title="Ansible实践部署"></a>Ansible实践部署</h2><h3 id="准备好虚拟机"><a href="#准备好虚拟机" class="headerlink" title="准备好虚拟机"></a>准备好虚拟机</h3><p>三个虚拟机 一个为ansible server 两个为客户端</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Rocky1  10.10.10.101Rocky1.skills.com.管理机器（安装了ansible的服务端）</span><br><span class="line">Rocky2  10.10.10.102Rocky2.skills.com.被管理机器（配置好ssh服务，以及关闭防火墙）</span><br><span class="line">Rocky3  10.10.10.103Rocky3.skills.com.被管理机器</span><br></pre></td></tr></table></figure><h2 id="准备ansible管理机器"><a href="#准备ansible管理机器" class="headerlink" title="准备ansible管理机器"></a>准备ansible管理机器</h2><p>（1）安装ansible管理工具</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@Rocky1 ~]# yum install -y ansible* libselinux</span><br></pre></td></tr></table></figure><p>（2）查看ansible的版本</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">ansible --version</span><br></pre></td></tr></table></figure><h3 id="准备ansible被管理机器-（客户端）"><a href="#准备ansible被管理机器-（客户端）" class="headerlink" title="准备ansible被管理机器 （客户端）"></a>准备ansible被管理机器 （客户端）</h3><p>（1）安装一下软件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@Rocky2 ~]# yum install -y ansible* libselinux*</span><br><span class="line">[root@Rocky3 ~]#  yum install -y ansible* libselinux*</span><br></pre></td></tr></table></figure><h2 id="Ansible管理方式"><a href="#Ansible管理方式" class="headerlink" title="Ansible管理方式"></a>Ansible管理方式</h2><p>ansible批量管理主机的方式主要有两种</p><ul><li>传统的输入密钥验证</li><li>密钥管理</li></ul><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">配置好ansible的配置文件，添加被管理主机的ip地址，或者主机名</span><br><span class="line"><span class="number">1.</span> 备份现有的配置文件</span><br><span class="line"><span class="meta"># cp /etc/ansible/hosts&#123;,.ori&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># ls /etc/ansible/</span></span><br><span class="line">ansible.cfg  hosts  hosts.ori  roles</span><br><span class="line"><span class="number">2.</span> 添加被管理主机的IP地址</span><br><span class="line">[root@Rocky1 ~]<span class="meta"># vim /etc/ansible/hosts <span class="comment">//在末行添加以下内容</span></span></span><br><span class="line">[client]</span><br><span class="line"><span class="number">10.10</span><span class="number">.10</span><span class="number">.102</span></span><br><span class="line"><span class="number">10.10</span><span class="number">.10</span><span class="number">.103</span></span><br></pre></td></tr></table></figure><h3 id="SSH密码认证方式管理及其"><a href="#SSH密码认证方式管理及其" class="headerlink" title="SSH密码认证方式管理及其"></a>SSH密码认证方式管理及其</h3><p>ansible是直接利用linux本地的ssh服务，以及一些远程的ssh操作们一般情况下客户端的ssh服务都是默认开启的，无需额外配置</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span>在Rocky1上执行如下命令  </span><br><span class="line">-m 指定功能模块  </span><br><span class="line">-a 需要执行的指定参数  </span><br><span class="line">-k 询问连接密码</span><br><span class="line">-u 指定远程主机以哪个用户去运行</span><br><span class="line">在Rocky1机器上，告诉其它被管理的机器，你要执行什么命令，以及用什么用户去执行</span><br><span class="line">ansible 主机列表 -m command -a <span class="string">&#x27;hostname&#x27;</span> -k -u root</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>如下操作一般会出现问题，需要手动SSH对主机进行一次连接，即可使用ansible命令操作</span><br><span class="line"></span><br><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># ssh 10.10.10.102</span></span><br><span class="line"><span class="function">Are you sure you want to <span class="keyword">continue</span> <span class="title">connecting</span> (<span class="params">yes/no/[fingerprint]</span>)? yes</span></span><br><span class="line"><span class="function">root@10.10.10.102&#x27;s password: </span></span><br><span class="line"><span class="function">Last login: Mon Jan  8 11:42:42 2024 <span class="keyword">from</span> 192.168.100.101</span></span><br><span class="line"><span class="function">[root@Rocky2 ~]# </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">[root@Rocky1 ~]# ssh 10.10.10.103</span></span><br><span class="line"><span class="function">root@10.10.10.103&#x27;s password: </span></span><br><span class="line"><span class="function">[root@Rocky3 ~]#</span></span><br><span class="line"><span class="function">3.这个时候我们再执行刚刚那个命令</span></span><br><span class="line"><span class="function"># ansible client -m command -a &#x27;hostname&#x27; -k -u root <span class="comment">//让两个被管理的机器，执行我们想要的结果</span></span></span><br></pre></td></tr></table></figure><ul><li>所以我们需要添加客户端机器的密钥 </li></ul><h2 id="配置免密登录"><a href="#配置免密登录" class="headerlink" title="配置免密登录"></a>配置免密登录</h2><p>每次执行ansible的命令的时候，都需要输入ssh的认证密码，也就是root密码，如果不同的主机密码不一致，那你还得输入多次才行，因此我们可以配置如下的快捷登录方式</p><h3 id="1-ansible自带的密码认证参数"><a href="#1-ansible自带的密码认证参数" class="headerlink" title="1.ansible自带的密码认证参数"></a>1.ansible自带的密码认证参数</h3><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">可以再 /etc/ansible/hosts文件中，定义好密码即可实现快速的认证，远程管理主机</span><br><span class="line"></span><br><span class="line">参数</span><br><span class="line">ansible_host  主机地址</span><br><span class="line">ansible-port  端口，默认端口是<span class="number">22</span></span><br><span class="line">ansible_user  认证的用户</span><br><span class="line">ansible_ssh_pass 用户认证的密码</span><br><span class="line"></span><br><span class="line"><span class="number">1.</span>将/etc/ansible/hosts文件下 添加以下内容 来快速实现快速的认证</span><br><span class="line"><span class="meta"># vim /etc/ansible/hosts</span></span><br><span class="line">[<span class="meta">client</span>]</span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span> ansible_user=root ansible_ssh_pass=<span class="number">1</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.103</span> ansible_user=root ansible_ssh_pass=<span class="number">1</span></span><br><span class="line"><span class="meta"># 保存并退出 </span></span><br><span class="line"></span><br><span class="line"><span class="number">2.</span>使用以下命令执行命令看看是否可以不需要密码</span><br><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># ansible client -m command -a &#x27;hostname&#x27;   //将-k -u root 取消 </span></span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.103</span> | CHANGED | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">Rocky3.skills.com</span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span> | CHANGED | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">Rocky2</span><br></pre></td></tr></table></figure><h3 id="2-ssh密钥方式批量管理主机"><a href="#2-ssh密钥方式批量管理主机" class="headerlink" title="2.ssh密钥方式批量管理主机"></a>2.ssh密钥方式批量管理主机</h3><p>这个方式比起hosts文件的参数来的更加安全放心</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1. 在Rocky1机器上创建密钥对</span><br><span class="line">[root@Rocky1 ~]<span class="comment"># ssh-keygen   //此时密钥对就会自动创建到/root/.ssh/id_rsa下面 </span></span><br><span class="line"></span><br><span class="line">2.此时检查公私钥文件</span><br><span class="line">[root@Rocky1 ~]<span class="comment"># cd ~/.ssh/</span></span><br><span class="line">[root@Rocky1 .ssh]<span class="comment"># ls</span></span><br><span class="line">id_rsa  id_rsa.pub  known_hosts  known_hosts.old</span><br></pre></td></tr></table></figure><p>编写公钥分发脚本</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="meta"># [root@Rocky1 .ssh]# mkdir /myssh</span></span><br><span class="line"><span class="meta"># [root@Rocky1 .ssh]# cd /myssh/</span></span><br><span class="line"><span class="meta"># [root@Rocky1 myssh]# touch ssh_key_send.sh</span></span><br><span class="line"><span class="meta"># [root@Rocky1 myssh]# vim ssh_key_send.sh </span></span><br><span class="line">---------------------------------------------------------------------------------------------------------</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">rm -f ~/.ssh/id_rsa*</span><br><span class="line">ssh-keygen -t rsa -f ~/.ssh/id_rsa -N <span class="string">&quot;&quot;</span> &gt; /dev/<span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">SSH_Pass=<span class="number">1</span></span><br><span class="line">Key_Path=~/.ssh/id_rsa.pub</span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> <span class="number">102</span> <span class="number">103</span></span><br><span class="line"><span class="keyword">do</span>    </span><br><span class="line">    sshpass -p $SSH_Pass ssh-copy-id -i $Key_Path -o StrictHostKeyChecking=no <span class="number">192.168</span><span class="number">.123</span>.$ip</span><br><span class="line">done</span><br><span class="line">---------------------------------------------------------------------------------------------------------</span><br><span class="line"><span class="meta"># [root@Rocky1 myssh]# sh ssh_key_send.sh  // 此时Rocky1这台机器上就可以免密的执行ansible的命令</span></span><br><span class="line"><span class="meta"># [root@Rocky1 myssh]# ansible client -m command -a &#x27;uname -a&#x27; </span></span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.103</span> | CHANGED | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">Linux Rocky3.skills.com <span class="number">5.14</span><span class="number">.0</span><span class="number">-162.6</span><span class="number">.1</span>.el9_1<span class="number">.0</span><span class="number">.1</span>.x86_64 <span class="meta">#1 SMP PREEMPT_DYNAMIC Mon Nov 28 18:44:09 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span> | CHANGED | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">Linux Rocky2 <span class="number">5.14</span><span class="number">.0</span><span class="number">-162.6</span><span class="number">.1</span>.el9_1<span class="number">.0</span><span class="number">.1</span>.x86_64 <span class="meta">#1 SMP PREEMPT_DYNAMIC Mon Nov 28 18:44:09 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><h3 id="3-总结"><a href="#3-总结" class="headerlink" title="3.总结"></a>3.总结</h3><pre><code>                            **在生产环境中，ansible的连接方式可以二选一。推荐使用ssh密钥管理来实现ansible的执行**</code></pre><h2 id="ansible模式与命令"><a href="#ansible模式与命令" class="headerlink" title="ansible模式与命令"></a>ansible模式与命令</h2><p><strong>ansible实现批量化主机管理的模式，主要有两种</strong></p><ul><li>利用ansible的纯命令行实现的批量化管理，ad-hoc模式———比较简单的shell命令管理</li><li>利用ansible的playbook剧本来实现批量管理，playbook ————比较复杂的shell脚本管理</li></ul><h3 id="1-ad-hoc模式"><a href="#1-ad-hoc模式" class="headerlink" title="1. ad-hoc模式"></a>1. ad-hoc模式</h3><p>ansible的ad-hoc模式是ansible的命令行形式，也就是处理一些临时的，简单的任务，可以直接使用ansible的命令行来操作</p><p>比如</p><ul><li>临时批量查看被管理机器的内存清空，cpu负载情况，网络情况</li><li>临时的分发配置文件等等</li></ul><h3 id="2-Playbook模式"><a href="#2-Playbook模式" class="headerlink" title="2. Playbook模式"></a>2. Playbook模式</h3><p>ansible的playbook模式是针对比较具体，且比较大的任务，那么你就得实现写好剧本</p><ul><li>一键部署rsync备份服务器</li><li>一键部署lnmp环境</li></ul><h3 id="3-ansible的ad-hoc命令行解析"><a href="#3-ansible的ad-hoc命令行解析" class="headerlink" title="3. ansible的ad-hoc命令行解析"></a>3. ansible的ad-hoc命令行解析</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Rocky1  ansible服务端</span><br><span class="line">Rocky2  被管理的机器</span><br><span class="line">Rocky3  被管理的机器</span><br></pre></td></tr></table></figure><ol><li>让被管理机器返回主机名</li></ol><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># ansible client -m command -a &#x27;hostname&#x27; </span></span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span> | CHANGED | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">Rocky2</span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.103</span> | CHANGED | rc=<span class="number">0</span> &gt;&gt;</span><br><span class="line">Rocky3</span><br></pre></td></tr></table></figure><h3 id="ad-hoc命令解析"><a href="#ad-hoc命令解析" class="headerlink" title="ad-hoc命令解析"></a>ad-hoc命令解析</h3><ul><li>Ansible —- 自带提供的命令操作</li><li>Chaoge———/etc/ansible/hosts文件中定义的主机组，还可以谢主机的ip地址 以及通配符 *</li><li>-m command ansible的指定模块的参数，以及指定了command的模块</li><li>-a 指定command模块什么参数，hostname,uname -r</li></ul><h3 id="ansible-doc命令"><a href="#ansible-doc命令" class="headerlink" title="ansible-doc命令"></a>ansible-doc命令</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">列出所有的ansible支持的模块</span><br><span class="line">ansible-doc -l | grep ^command</span><br><span class="line">查看莫格模块的具体用法参数</span><br><span class="line">ansible-doc -s command</span><br></pre></td></tr></table></figure><h2 id="Ansible的模块精讲"><a href="#Ansible的模块精讲" class="headerlink" title="Ansible的模块精讲"></a>Ansible的模块精讲</h2><h3 id="command模块"><a href="#command模块" class="headerlink" title="command模块"></a>command模块</h3><p><strong>作用 在远程节点上执行一个命令</strong></p><p>ansible-doc -s command 查看该模块支持的参数</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">chdir  在执行命令之前，先通过cd进入该参数指定的目录</span><br><span class="line">creates  在创建一个文件之前，判断该文件是否存在，如果存在了，则跳过前面的东西，如果不存在则执行前面的动作</span><br></pre></td></tr></table></figure><p> command模块是ansible的默认基本模块，也可以省略不写，但是要注意如下的坑</p><ul><li>使用command模块，不得使用sehll变量<code>$name</code>，也不得出现特殊符号<code>&gt; &lt; | ; &amp;</code> 这些符号command模块都不认识，如果你想使用前面指定的模块，特殊符号，请使用shell模块。</li></ul><p>command</p><h1 id="ansible常用模块"><a href="#ansible常用模块" class="headerlink" title="ansible常用模块"></a>ansible常用模块</h1><h2 id="command模块-1"><a href="#command模块-1" class="headerlink" title="command模块"></a>command模块</h2><p><strong>功能： 在远程主机上执行命令</strong>，此为默认模块，可忽略-m选项</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">- name: Execute commands <span class="keyword">on</span> targets</span><br><span class="line">  command:</span><br><span class="line">      argv:                  <span class="meta"># 以列表形式传递命令，而不是字符串。使用`argv&#x27;可以避免将某些需要特殊处理的值（例如“用户名”）错误地解释为字符串。只能提&gt;</span></span><br><span class="line">                             <span class="meta"># 供字符串形式或列表形式的其中一种，不可同时提供两者。必须提供其中之一。</span></span><br><span class="line">      chdir:                 <span class="meta"># 在运行命令之前切换到指定目录。</span></span><br><span class="line">      cmd:                   <span class="meta"># 要运行的命令。</span></span><br><span class="line">      creates:               <span class="meta"># 文件名或（自2.0版本以来）通配符模式。如果已存在匹配的文件，则不会运行此步骤。在检查`removes&#x27;之前进行检查。</span></span><br><span class="line">      free_form:             <span class="meta"># 命令模块接受自由形式字符串作为要运行的命令。实际上没有名为 &#x27;free form&#x27; 的参数。</span></span><br><span class="line">      removes:               <span class="meta"># 文件名或（自2.0版本以来）通配符模式。如果存在匹配的文件，则会运行此步骤。在检查`creates&#x27;之后进行检查。</span></span><br><span class="line">      stdin:                 <span class="meta"># 直接将命令的标准输入设置为指定的值。</span></span><br><span class="line">      stdin_add_newline:     <span class="meta"># 如果设置为 `yes&#x27;，则在标准输入数据末尾添加换行符。</span></span><br><span class="line">      strip_empty_ends:      <span class="meta"># 从结果的stdout/stderr末尾删除空行。</span></span><br><span class="line">      warn:                  <span class="meta"># （已弃用）启用或禁用任务警告。此功能已被弃用，并将在2.14版本中移除。从2.1版本开始，默认情况下禁用此选项。</span></span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="meta"># ansible client -m command -a &quot;systemctl stop httpd&quot;  //关闭clinet组的httpd服务</span></span><br><span class="line"><span class="meta"># ansible client -m command -a &quot;hostname&quot;  //查看client组的用户名</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># [root@Rocky1 ~]# ansible client  -m command -a &#x27;chdir=/etc creates=/root/1.txt cat httpd/conf/httpd.conf&#x27; </span></span><br><span class="line"></span><br><span class="line"><span class="meta"># chdir=/etc  //执行这个命令前 先进入/etc目录下</span></span><br><span class="line"><span class="meta"># creates=/root/1.txt  //如果客户端的主机上有/root/1.txt这个文件 那么后面的命令则不执行了</span></span><br><span class="line"><span class="meta"># cat https/conf/httpd.conf  //查看客户端的httpd/conf/httpd.conf这个配置文件</span></span><br></pre></td></tr></table></figure><h2 id="Shell模块"><a href="#Shell模块" class="headerlink" title="Shell模块"></a>Shell模块</h2><p>功能：<strong>和Command模块差不多</strong> 但是支持更多的命令参数 不易报错 所以参数命令跟Command差不多 不再介绍</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示所有管理端的主机名  </span></span><br><span class="line">· ansible client  -m shell -a <span class="string">&#x27;echo $HOSTNAME&#x27;</span></span><br><span class="line">192.168.123.102 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Rocky2</span><br><span class="line"><span class="comment"># 将管理端机器的/tmp目录下的所有文件删除   </span></span><br><span class="line">·  ansible client  -m shell -a <span class="string">&#x27;rm -rf /tmp/*&#x27;</span></span><br><span class="line">192.168.123.102 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="comment"># 修改root用户密码  </span></span><br><span class="line">·  ansible client -m shell -a <span class="string">&#x27;echo &quot;pass-123&quot;|passwd --stdin root&#x27;</span></span><br><span class="line">192.168.123.102 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">更改用户 root 的密码 。</span><br><span class="line">passwd：所有的身份验证令牌已经成功更新。</span><br></pre></td></tr></table></figure><h2 id="Script模块"><a href="#Script模块" class="headerlink" title="Script模块"></a>Script模块</h2><p><strong>功能：在远程主机上运行ansible脚本</strong> </p><p>Script对比Shell和Command的好处</p><ol><li>Shell上执行命令方便 但是如果你写了脚本的话 你单纯使用Shell命令它不能执行</li><li>Script上写了脚本后 你可以将这个脚本传送给所有控制端的所有机器 并执行</li></ol><p>范例：</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>) [root@Rocky1 ~]<span class="meta"># cat &gt; test.sh</span></span><br><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line">echo <span class="string">&quot;my hostname is &#x27;Rocky&#x27;&quot;</span></span><br><span class="line">^C</span><br><span class="line">(<span class="number">2</span>) 执行测试这个脚本能不能正常工作</span><br><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># /root/test.sh </span></span><br><span class="line">my hostname <span class="keyword">is</span> <span class="string">&#x27;Rocky&#x27;</span></span><br><span class="line">(<span class="number">3</span>) 在控制端使用脚本</span><br><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># ansible client -m script -a &#x27;/root/test.sh&#x27;</span></span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span> | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>,   <span class="comment">// changed:true 表示操作已成功</span></span><br><span class="line">    <span class="string">&quot;rc&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;Shared connection to 192.168.123.102 closed.\r\n&quot;</span>,</span><br><span class="line">    <span class="string">&quot;stderr_lines&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;Shared connection to 192.168.123.102 closed.&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;my hostname is &#x27;Rocky&#x27;\r\n&quot;</span>,</span><br><span class="line">    <span class="string">&quot;stdout_lines&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;my hostname is &#x27;Rocky&#x27;&quot;</span></span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="copy模块"><a href="#copy模块" class="headerlink" title="copy模块"></a>copy模块</h2><p><strong>功能： 将ansible的文件复制到远程的主机</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dest  指定复制文件的目录位置，使用绝对路径。如果是源目录，则目标也要是目录，如果目标文件已存在，会覆盖原有内同</span><br><span class="line">src    指定源文件的路径，可以使用相对路径和绝对路径，支持直接指定路径，如果是源是目录，则目标也要是目录</span><br><span class="line">mode  指出复制时，目标文件的权限，可选</span><br><span class="line">owner  指出复制时，目标文件的属主，可选</span><br><span class="line">group  指出拇指时目标文件的属组，可选</span><br><span class="line">content  指出复制到目标主机上的内容，不能和src一起使用</span><br></pre></td></tr></table></figure><p>  范例：</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">[root@Rocky1 ~]<span class="meta"># ansible client -m copy -a <span class="string">&quot;content=&#x27;test line1\n test line2&#x27; dest=/tmp/test.txt&quot;</span> </span></span><br><span class="line">（<span class="number">1</span>）content=<span class="string">&#x27;test lin1\ntest line2&#x27;</span> <span class="comment">//指定写入的内容 直接写出要添加的内容 生成文件</span></span><br><span class="line">（<span class="number">2</span>）dest=/tmp/test.txt <span class="comment">//指定复制到文件的位置</span></span><br><span class="line"># [root@Rocky1 ~]<span class="meta"># ansible client -m copy -a <span class="string">&quot;content=&#x27;test line1\ntest line2&#x27; dest=/tmp/test.txt&quot;</span></span></span><br><span class="line">-----------------------------------------------------------------------------------------------</span><br><span class="line">    <span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span> | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ansible_facts&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;discovered_interpreter_python&quot;</span>: <span class="string">&quot;/usr/bin/python3&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;checksum&quot;</span>: <span class="string">&quot;43791ccbbcf72774b2bbbe6fe8d7ab488359b922&quot;</span>,</span><br><span class="line">    <span class="string">&quot;dest&quot;</span>: <span class="string">&quot;/tmp/test.txt&quot;</span>,</span><br><span class="line">    <span class="string">&quot;gid&quot;</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="string">&quot;group&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;md5sum&quot;</span>: <span class="string">&quot;f0e596e1a1a3ef7d278f2dda4d4e6ec8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;mode&quot;</span>: <span class="string">&quot;0644&quot;</span>,</span><br><span class="line">    <span class="string">&quot;owner&quot;</span>: <span class="string">&quot;root&quot;</span>,</span><br><span class="line">    <span class="string">&quot;secontext&quot;</span>: <span class="string">&quot;unconfined_u:object_r:admin_home_t:s0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;size&quot;</span>: <span class="number">21</span>,</span><br><span class="line">    <span class="string">&quot;src&quot;</span>: <span class="string">&quot;/root/.ansible/tmp/ansible-tmp-1699611955.979775-3537-224485407617732/source&quot;</span>,</span><br><span class="line">    <span class="string">&quot;state&quot;</span>: <span class="string">&quot;file&quot;</span>,</span><br><span class="line">    <span class="string">&quot;uid&quot;</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">--------------------------------------------------------------------------------------------------</span><br><span class="line">[root@Rocky1 ~]<span class="meta"># ansible client -a <span class="string">&#x27;cat /tmp/test.txt&#x27;</span>   <span class="comment">//查看文件内容是否复制到了指定目录</span></span></span><br><span class="line"><span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span> | CHANGED | rc=<span class="number">0</span> &gt;&gt; </span><br><span class="line">test line1</span><br><span class="line">test line2</span><br></pre></td></tr></table></figure><p>   范例：将ansible服务器的/etc/sysconfig文件拷贝到控制端主机的/data/目录下 并且权限为600 属主为ayaka</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># [root@Rocky1 ~]# ansible client -m copy -a &#x27;src=/etc/sysconfig dest=/data/ mode=600 owner=ayaka&#x27;</span></span><br><span class="line">----------------------------------------</span><br><span class="line">192.168.123.102 | CHANGED =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="string">&quot;dest&quot;</span>: <span class="string">&quot;/data/&quot;</span>,</span><br><span class="line">    <span class="string">&quot;src&quot;</span>: <span class="string">&quot;/etc/sysconfig&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">----------------------------------------</span><br><span class="line"><span class="comment"># [root@Rocky1 ~]# ansible client -m shell -a &#x27;ls -ld /data/*&#x27;</span></span><br><span class="line">192.168.123.102 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">drwxr-xr-x. 3 ayaka root 4096 11月 10 05:33 /data/sysconfig</span><br></pre></td></tr></table></figure><h2 id="Fetch模块"><a href="#Fetch模块" class="headerlink" title="Fetch模块"></a>Fetch模块</h2><p>功能：从远程主机提取文件至ansible的主控端，copy相反，<strong>目前不支持目录</strong> </p><p>范例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yamlCopy Code- name: Fetch a file from remote host</span><br><span class="line">  fetch:</span><br><span class="line">    src: /path/to/src/file.txt</span><br><span class="line">    dest: /path/to/dest/file.txt</span><br></pre></td></tr></table></figure><p>在此示例中，我们使用<code>fetch</code>模块从远程主机获取位于<code>/path/to/src/file.txt</code>的文件，并将其保存到本地的<code>/path/to/dest/file.txt</code>。</p><h2 id="File模块"><a href="#File模块" class="headerlink" title="File模块"></a>File模块</h2><p>功能：设置文件属性</p><p> 范例；</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 创建空文件</span></span><br><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># ansible client -m file -a &#x27;path=/root/o.txt state=touch&#x27;   //state=touch touch的意思就是创建文件的意思</span></span><br><span class="line"><span class="meta">#删除文件 </span></span><br><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># ansible client -m file -a &#x27;path=/root/o.txt state=absent&#x27;  //state=absent absent就是删除</span></span><br><span class="line"><span class="meta">#设置文件的属性</span></span><br><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># ansible client -m file -a &#x27;path=/root/o.txt owner=ayaka mode=777&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#创建目录</span></span><br><span class="line">[<span class="meta">root@Rocky1 ~</span>]<span class="meta"># ansible client -m file -a &#x27;path=/data/mysql state=directory&#x27;</span></span><br><span class="line">！ 重点参数 state=directory <span class="comment">//directory的意思就是创建目录</span></span><br></pre></td></tr></table></figure><h2 id="unarchive模块"><a href="#unarchive模块" class="headerlink" title="unarchive模块"></a>unarchive模块</h2><p>功能：解包解压缩</p><p>实现有两种方法：</p><p>1、将ansible主机上的压缩包传到远程主机后解压缩所至特定目录，设置copy=yes</p><p>2、将远程主机上的莫格压缩包解压缩到指定路径下、设置copy=no</p><p>远程解压缩：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 文件打包</span><br><span class="line">tar zcvf toto.tar.gz /etc/*</span><br><span class="line"></span><br><span class="line"># 远程解压缩</span><br><span class="line">[root@Rocky1 ~]# ansible client -m unarchive -a &#x27;src=/root/toto.tar.gz dest=/data/ owner=ayaka&#x27;</span><br><span class="line"></span><br><span class="line"># 检查远程是否解压缩了文件</span><br><span class="line">[root@Rocky1 ~]# ansible client -m shell -a &#x27;ls -ld  /data/*&#x27;</span><br><span class="line">192.168.123.102 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">drwxr-xr-x. 135 ayaka root    8192 11月 10 06:08 /data/etc   //可以看到是以及解压缩了的</span><br></pre></td></tr></table></figure><p>本地解压缩：（如果要在本地解包 一定要指定源文件的位置是其压缩包的位置 并且最后面一定要加上copy=no 表示本地压缩包）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@Rocky1 ~]# ansible client -m unarchive -a &#x27;src=/data/toto.tar.xz dest=/opt/ mode=777 copy=no&#x27;</span><br></pre></td></tr></table></figure><h2 id="hostname模块"><a href="#hostname模块" class="headerlink" title="hostname模块"></a>hostname模块</h2><p>功能：管理主机名</p><p>范例：</p><ul><li>ansible -m hostname -a ‘需要修改的主机名名称’</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@Rocky1 log]# ansible client -m hostname -a &#x27;name=Rocky2.skills.com&#x27;</span><br></pre></td></tr></table></figure><h2 id="Cron模块"><a href="#Cron模块" class="headerlink" title="Cron模块"></a>Cron模块</h2><p>功能：计划任务</p><p>支持时间：minute，hour，day，month，weekday</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份数据库脚本</span></span><br><span class="line">mysqldump -A -F --single_trancaction --master-data=2 -q -uroot | gzip &gt; /data/mysql_`<span class="built_in">date</span>+%F_%T`.sql.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建任务</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible 192.168.123.102 -m cron -a &#x27;hour=2 minute=30 weekday=1-5 name=&quot;backup mysql&quot; job=/root/mysql_backup.sh&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 观察计划任务</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m shell -a &#x27;crontab -l&#x27;</span></span><br><span class="line"></span><br><span class="line">192.168.123.102 | CHANGED | rc=0 &gt;&gt;</span><br><span class="line"><span class="comment">#Ansible: backup mysql</span></span><br><span class="line">30 2 * * 1-5 /root/mysql_backup.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用计划任务</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible 192.168.123.102 -m cron -a &#x27;hour=2 minute=30 weekday=1-5 name=&quot;backup mysql&quot; job=/root/mysql_backup.sh disabled=yes&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 启用计划任务</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible 192.168.123.102 -m cron -a &#x27;hour=2 minute=30 weekday=1-5 name=&quot;backup mysql&quot; job=/root/mysql_backup.sh disabled=no&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment"># 删除计划任务</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible 192.168.123.102 -m cron -a &#x27; name=&quot;backup mysql&quot; state=absent&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Yum模块"><a href="#Yum模块" class="headerlink" title="Yum模块"></a>Yum模块</h2><p>功能：管理软件包，支持RHEL，Centos，fedora，不支持Ubuntu</p><p>常用参数：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">name：     指定要操作的软件包的名称，可以是单个软件包的名称，也可以是多个软件包的列表</span><br><span class="line"></span><br><span class="line">state：     指定软件包的状态 常见的取值有present（安装软件包） absent（删除软件包）latest（更新软件包）</span><br><span class="line">    </span><br><span class="line">update_cache：可以是yes或no 控制是否在执行任务前更新yum缓存</span><br></pre></td></tr></table></figure><p>范例：安装与删除samba软件包</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装samba软件包</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m yum -a &#x27;name=samba state=present&#x27; </span></span><br><span class="line"><span class="comment"># 卸载samba软件包</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m yum -a &#x27;name=samba state=absent&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="service服务"><a href="#service服务" class="headerlink" title="service服务"></a>service服务</h2><p>功能：管理服务的状态</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">常见参数：</span><br><span class="line"></span><br><span class="line">state=?    ？即为以下这些参数 </span><br><span class="line"></span><br><span class="line">- started 开启</span><br><span class="line"></span><br><span class="line">- stopped 关闭</span><br><span class="line"></span><br><span class="line">- enabled 自启动</span><br><span class="line"></span><br><span class="line">- reloaded/restarted 重启</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动httpd的服务</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m service -a &#x27;name=httpd state=started&#x27;</span></span><br><span class="line"><span class="comment"># 停止httpd的服务</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m service -a &#x27;name=httpd state=stopped&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Users模块"><a href="#Users模块" class="headerlink" title="Users模块"></a>Users模块</h2><p>功能：管理用户</p><p>常用命令参数：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- name      指定要操作的用户名</span><br><span class="line">- comment        用于设置用户的注释信息</span><br><span class="line">- group          将用户添加的指定的用户组</span><br><span class="line">- <span class="built_in">groups</span>         指定用户的所属的用户组列表</span><br><span class="line">- password       指定用户的密码</span><br><span class="line">- shell          指定用户登录的shell</span><br><span class="line">- home           指定用户的家目录</span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建用户</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m user -a &#x27;name=user1 comment=&quot;test user&quot; uid=2048 home=/app/user1 group=root&#x27;</span></span><br><span class="line"><span class="comment"># 删除用户及家目录登数据</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m user -a &#x27;name=user1 state=absent remove=yes&#x27; </span></span><br></pre></td></tr></table></figure><h2 id="Group模块"><a href="#Group模块" class="headerlink" title="Group模块"></a>Group模块</h2><p>功能：管理用户的用户组</p><p>范例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加用户组nginx 并指定gid88</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m group -a &#x27;name=nginx gid=88 system=yes&#x27;</span></span><br><span class="line"><span class="comment"># 删除用户组nginx</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m group -a &#x27;name=nginx state=absent&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Lineinfile模块"><a href="#Lineinfile模块" class="headerlink" title="Lineinfile模块"></a>Lineinfile模块</h2><p><em>ansible在使用sed进行替换时，经常会遇到需要转义的问题，而且ansible在遇到特殊符号进行提更换时，存在问题，无法进行替换。其实ansible自身提供了两个模块：lineinfile和replace模块</em></p><p><strong>功能：相当于sed 可以修改文件内容</strong></p><p>常用参数：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. state: 指定行应当存在还是不存在。常见取值包括“present（存在）”和absent（不存在）</span><br><span class="line">2. path： 指定目标文件的路径</span><br><span class="line">3. regexp： 用于匹配需要操作的行的正则表达式模式</span><br><span class="line">4. line： 指定要插入或替换的文本内容</span><br></pre></td></tr></table></figure><p>范例：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 将/etc/httpd/conf/httpd.conf中的listen=80换成listen8080</span></span><br><span class="line">ansible client -m lineinfile -a <span class="string">&#x27;path=/etc/httpd/conf/httpd.conf regexp=&#x27;</span>^listen=<span class="string">&#x27; line=&#x27;</span>listen=8080<span class="string">&#x27;&#x27;</span> </span><br><span class="line"><span class="comment"># 将/etc/httpd/conf/httpd.conf中的#注释删除</span></span><br><span class="line">[root@Rocky1 <span class="built_in">log</span>]<span class="comment"># ansible client -m lineinfile -a &#x27;dest=/etc/httpd/conf/httpd.conf state=absent regexp=&quot;#&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="修改默认模块"><a href="#修改默认模块" class="headerlink" title="修改默认模块"></a>修改默认模块</h2><p>范例：将shell模块代替command，设为默认模块</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@Rocky1 ~]# vim /etc/ansible/ansible.cfg </span><br><span class="line"># 修改下面一行</span><br><span class="line">module_name = shell</span><br></pre></td></tr></table></figure><h1 id="playbook"><a href="#playbook" class="headerlink" title="playbook"></a>playbook</h1><h2 id="playbook介绍"><a href="#playbook介绍" class="headerlink" title="playbook介绍"></a>playbook介绍</h2><p><img src="image-20231110150314139.png" alt="image-20231110150314139"></p><p>playbook剧本是由一个或多个”play”组成的列表</p><p>play的主要功能在于将预定的一组主机，装扮成实现通过ansible的task定义好的角色，task实际是调用ansible的一个module，将多个playbook中，即可以让它们列和起来，按事先编排的机制执行预定义的动作</p><p>Playbook文件采用YAML语言编写。</p><h2 id="YAML语言"><a href="#YAML语言" class="headerlink" title="YAML语言"></a>YAML语言</h2><h3 id="YAML语言介绍"><a href="#YAML语言介绍" class="headerlink" title="YAML语言介绍"></a>YAML语言介绍</h3><p>YAML是一个可读性高的用来表达资料序列的格式，它参考了很多其它语言，包括：XML、C语言、Python、Perl以及电子邮件格式RFC2822登。不过在开打的这种语言时，YAML的意思其实是”Yet Anothemarkup Language” 仍是一种标记语言。</p><h3 id="YAML语言的特性"><a href="#YAML语言的特性" class="headerlink" title="YAML语言的特性"></a>YAML语言的特性</h3><ul><li>YAML的可读性好</li><li>YAML和脚本语言的交互性好</li><li>YAML使用实现语言的数据类型</li><li>YAML有一个一致的信息模型</li><li>YAML易于实现</li><li>YAML可以基于流来处理</li></ul><h3 id="YAML语言简介"><a href="#YAML语言简介" class="headerlink" title="YAML语言简介"></a>YAML语言简介</h3><ul><li>在单一文件第一行，用连续三个字号”—-“开始，还有选择性的连续三个点号（…）用来表示文件的结尾</li><li>次行开始正常写Playbook的内容，一般建议写明该Playbook的功能</li><li>使用#号注释代码</li><li>缩进必须是一直的，同样的缩进代表同样的级别，程序判别的级别是通过缩进结合换行来实现的YAML文件内容是区分大小写的，key/value的值俊需大小写敏感</li><li>多个k/v可同行也可以换行写，同行使用，分隔。</li><li>v可是个字符串，也可以是另一个列表。</li><li>一个完整的代码块功能需要最少元素需包括name和task</li><li>一个name只能包括一个task</li><li>YAML文件的扩展名通常为yml和yaml</li></ul><h4 id="List列表"><a href="#List列表" class="headerlink" title="List列表"></a>List列表</h4><p>列表由多个元素组成，且所有元素前均使用“-”打头</p><p>范例：</p><p><img src="image-20231110154206094.png" alt="image-20231110154206094"></p><h4 id="Directory字典"><a href="#Directory字典" class="headerlink" title="Directory字典"></a>Directory字典</h4><p>字典通常由多个key和value组成</p><p>范例：</p><p><img src="image-20231110202455557.png" alt="image-20231110202455557"></p><h3 id="三种常见的数据形式"><a href="#三种常见的数据形式" class="headerlink" title="三种常见的数据形式"></a>三种常见的数据形式</h3><p>XML：Extensible Markup Languuage，可扩展标记语言，可用于数据交换和配置</p><p>JSON：JavaScript Object Notation，JavaScript对象标记法，主要用来数据交换或配置，不支持注释</p><p>YAML：YAML Ain’t Markup Language YAML不是一种标记语言，主要用来配置，大小写敏感，不支持tab</p><p><img src="image-20231110202706638.png" alt="image-20231110202706638"></p><h2 id="Playbook核心元素"><a href="#Playbook核心元素" class="headerlink" title="Playbook核心元素"></a>Playbook核心元素</h2><ul><li>Hosts 执行的远程主机列表</li><li>Tasks  任务集</li><li>Variables  内置变量或自定义变量在playbook中调用</li><li>Templates模板，可替换模板文件中的变量并实现一些简单的逻辑文件</li><li>Handlers和notify结合使用，由特定条件出发的操作，满足条件方才执行，覅则不执行</li></ul><h3 id="hosts组件"><a href="#hosts组件" class="headerlink" title="hosts组件"></a>hosts组件</h3><p>Hosts：playbook中的每一个play的目的都是为了让特定主机以某个指定的用户身份执行任务。hosts用于指定要执行指定任务的主机，须事先定义在主机清单中。</p><p>案例：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/ansible/hosts</span><br><span class="line">[client]</span><br><span class="line">192.168.123.101 </span><br><span class="line">192.168.123.102</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hosts: client</span><br></pre></td></tr></table></figure><h3 id="remote-user组件"><a href="#remote-user组件" class="headerlink" title="remote_user组件"></a>remote_user组件</h3><p>remote_user：可用于Host和task中。也可以通过指定其通过sudo的方式在远程主机上执行任务，其可用于play全局或某任务；此外，甚至可以在sudo时使用sudo_user指定sudo时切换的用户</p><p><img src="image-20231110204047276.png" alt="image-20231110204047276"></p><h3 id="task列表和action组件"><a href="#task列表和action组件" class="headerlink" title="task列表和action组件"></a>task列表和action组件</h3><p>play的主体部分时task list，task list中有一个或多个task，各个task按次序逐个在hosts中指定的所有主机上执行，即在所有主机上完成第一个task后，在开始第二个task。</p><p>task的目的时使用指定的参数执行模块，而在模块参数中可以使用变量。模块执行是幂等的，这意味着多次执行时安全的，因为其结果均一致</p><p>每个task都应该由其name，用于playbook的执行结果输出，建议其内容能清晰地描述任务执行步骤。如果未提供name，则action的结果输出都一致。</p><p>task两种格式：</p><p>（1）action：module argument</p><p>（2）module：arguments</p><p>注意：shell和command模块后面跟命令 而非key=value</p><p>范例：</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">httpd</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">start</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">service:</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br></pre></td></tr></table></figure><h3 id="ShellScripts-VS-Playbook案例"><a href="#ShellScripts-VS-Playbook案例" class="headerlink" title="ShellScripts VS Playbook案例"></a>ShellScripts VS Playbook案例</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Shell脚本实现</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="comment">#安装apache</span></span><br><span class="line"><span class="string">yum</span> <span class="string">install</span> <span class="string">--quiet</span> <span class="string">-y</span> <span class="string">httpd</span></span><br><span class="line"><span class="comment">#复制配置文件</span></span><br><span class="line"><span class="string">cp</span> <span class="string">/tmp/httpd.conf</span> <span class="string">/etc/httpd/conf/httpd.conf</span></span><br><span class="line"><span class="string">cp</span> <span class="string">/tmp/vhosts.conf</span> <span class="string">/etc/httpd/conf.d/</span></span><br><span class="line"><span class="comment">#启动Apache服务</span></span><br><span class="line"><span class="string">systemctl</span> <span class="string">enable</span> <span class="string">--now</span> <span class="string">httpd</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Playbook实现</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">client</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;安装httpd服务&quot;</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;复制httpd文件&quot;</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">/tmp/httpd/httpd.conf</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/httpd/conf/httpd.conf</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;复制httpd文件&quot;</span></span><br><span class="line">      <span class="attr">copy:</span> </span><br><span class="line">        <span class="attr">src:</span> <span class="string">/tmp/vhosts.conf</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/etc/httpd/conf.d</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;启动Apache服务&quot;</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br></pre></td></tr></table></figure><h3 id="playbook命令"><a href="#playbook命令" class="headerlink" title="playbook命令"></a>playbook命令</h3><p>格式：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ansible-playbook &lt;filename.yaml&gt; ... [options]</span><br></pre></td></tr></table></figure><p>常见选项：</p><figure class="highlight c#"><table><tr><td class="code"><pre><span class="line">-c --check      <span class="meta">#只检测可能会发生的改变，但不真正执行操作</span></span><br><span class="line">--list-hosts    <span class="meta">#列出运行任务的主机</span></span><br><span class="line">--lists-tags    <span class="meta">#列出tag</span></span><br><span class="line">--lists-tasks    <span class="meta">#列出tasks</span></span><br><span class="line">--limit 主机列表   <span class="meta">#只针对主机列表中的主机执行</span></span><br><span class="line">-v -vv -vvv      <span class="meta">#显示过程</span></span><br></pre></td></tr></table></figure><p>范例：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Rocky1 ~]<span class="comment"># ansible-playbook instalhttpd.yaml --check  //只检测</span></span><br><span class="line"></span><br><span class="line">[root@Rocky1 ~]<span class="comment"># ansible-playbook instalhttpd.yaml --limit 192.168.123.101   //只针对其中一台主机执行</span></span><br></pre></td></tr></table></figure><h2 id="playbook初步"><a href="#playbook初步" class="headerlink" title="playbook初步"></a>playbook初步</h2><h3 id="利用playbook创建mysql用户"><a href="#利用playbook创建mysql用户" class="headerlink" title="利用playbook创建mysql用户"></a>利用playbook创建mysql用户</h3><p>范例：mysql_user,yml</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">client</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;创建用户组mysql&quot;</span></span><br><span class="line">      <span class="attr">group:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">system:</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">gid:</span> <span class="number">306</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;创建用户mysql&quot;</span></span><br><span class="line">      <span class="attr">user:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">shell:</span> <span class="string">/sbin/nologin</span></span><br><span class="line">        <span class="attr">system:</span> <span class="literal">yes</span></span><br><span class="line">        <span class="attr">group:</span> <span class="string">mysql</span></span><br><span class="line">        <span class="attr">uid:</span> <span class="number">306</span></span><br><span class="line">        <span class="attr">home:</span> <span class="string">/data/mysql</span></span><br><span class="line">        <span class="attr">create_home:</span> <span class="literal">no</span></span><br></pre></td></tr></table></figure><h3 id="利用playbook安装和启用Nginx服务"><a href="#利用playbook安装和启用Nginx服务" class="headerlink" title="利用playbook安装和启用Nginx服务"></a>利用playbook安装和启用Nginx服务</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">client</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;安装Nginx服务&quot;</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;停止Apache服务&quot;</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">       <span class="attr">name:</span> <span class="string">httpd</span></span><br><span class="line">       <span class="attr">state:</span> <span class="string">stopped</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;开启Nginx服务&quot;</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br></pre></td></tr></table></figure><h3 id="利用playbook安装和启用Apache服务并设置网页内容"><a href="#利用playbook安装和启用Apache服务并设置网页内容" class="headerlink" title="利用playbook安装和启用Apache服务并设置网页内容"></a>利用playbook安装和启用Apache服务并设置网页内容</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;复制index文件到web1上&quot;</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">/root/index1.html</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/var/www/html/index.html</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="number">192.168</span><span class="number">.123</span><span class="number">.102</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;复制index文件到web2上&quot;</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">/root/index2.html</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/var/www/html/index.html</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">client</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;停止Nginx服务&quot;</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=nginx</span> <span class="string">state=stopped</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&quot;重启httpd服务&quot;</span></span><br><span class="line">      <span class="attr">service:</span> <span class="string">name=httpd</span> <span class="string">state=restarted</span></span><br></pre></td></tr></table></figure><p>测试：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@Rocky1 ~]<span class="comment"># curl 192.168.123.101</span></span><br><span class="line">WebA</span><br><span class="line">[root@Rocky1 ~]<span class="comment"># curl 192.168.123.102</span></span><br><span class="line">WebB</span><br></pre></td></tr></table></figure><h1 id="实操"><a href="#实操" class="headerlink" title="实操"></a>实操</h1><h2 id="安装部署nginx服务"><a href="#安装部署nginx服务" class="headerlink" title="安装部署nginx服务"></a>安装部署nginx服务</h2><ol><li>编辑yaml文件</li></ol><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">hosts:</span> <span class="string">client</span></span><br><span class="line">  <span class="attr">remote_user:</span> <span class="string">root</span></span><br><span class="line">  <span class="attr">tasks:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">install</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">yum:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">present</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">copy</span> <span class="string">index.html</span></span><br><span class="line">      <span class="attr">copy:</span></span><br><span class="line">        <span class="attr">src:</span> <span class="string">/root/index.html</span></span><br><span class="line">        <span class="attr">dest:</span> <span class="string">/usr/share/nginx/html/</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">start</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">service:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">state:</span> <span class="string">started</span></span><br></pre></td></tr></table></figure><ol><li>准备主页内容文件</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;Hello Nginx&quot; &gt; index.html</span><br></pre></td></tr></table></figure><ol><li>运行yaml</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@host-10-10-110-101 ~]# ansible-playbook nginx.yaml </span><br><span class="line"></span><br><span class="line">PLAY [client] **********************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] *************************************************************************************************</span><br><span class="line">ok: [linux3.skills.com]</span><br><span class="line">ok: [linux2.skills.com]</span><br><span class="line">ok: [linux4.skills.com]</span><br><span class="line">ok: [linux5.skills.com]</span><br><span class="line"></span><br><span class="line">TASK [install nginx] ***************************************************************************************************</span><br><span class="line">changed: [linux2.skills.com]</span><br><span class="line">changed: [linux3.skills.com]</span><br><span class="line">changed: [linux4.skills.com]</span><br><span class="line">changed: [linux5.skills.com]</span><br><span class="line"></span><br><span class="line">TASK [copy index.html] *************************************************************************************************</span><br><span class="line">changed: [linux2.skills.com]</span><br><span class="line">changed: [linux5.skills.com]</span><br><span class="line">changed: [linux4.skills.com]</span><br><span class="line">changed: [linux3.skills.com]</span><br><span class="line"></span><br><span class="line">TASK [start nginx] *****************************************************************************************************</span><br><span class="line">changed: [linux2.skills.com]</span><br><span class="line">changed: [linux4.skills.com]</span><br><span class="line">changed: [linux3.skills.com]</span><br><span class="line">changed: [linux5.skills.com]</span><br><span class="line"></span><br><span class="line">PLAY RECAP *************************************************************************************************************</span><br><span class="line">linux2.skills.com          : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">linux3.skills.com          : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">linux4.skills.com          : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">linux5.skills.com          : ok=4    changed=3    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>访问网站</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@host-10-10-110-101 ~]# ansible client -m shell -a &quot;curl localhost&quot;</span><br><span class="line">linux5.skills.com | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Hello Nginx  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    12  100    12    0     0   6000      0 --:--:-- --:--:-- --:--:--  6000</span><br><span class="line">linux2.skills.com | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Hello Nginx  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    12  100    12    0     0  12000      0 --:--:-- --:--:-- --:--:-- 12000</span><br><span class="line">linux4.skills.com | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Hello Nginx  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    12  100    12    0     0   6000      0 --:--:-- --:--:-- --:--:-- 12000</span><br><span class="line">linux3.skills.com | CHANGED | rc=0 &gt;&gt;</span><br><span class="line">Hello Nginx  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    12  100    12    0     0   6000      0 --:--:-- --:--:-- --:--:--  6000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Ansible </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 网络建设与运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Centos7下配置IP地址的详细步骤</title>
      <link href="/2024/04/16/Linux-Centos7%E4%B8%8B%E9%85%8D%E7%BD%AEIP%E5%9C%B0%E5%9D%80%E7%9A%84%E8%AF%A6%E7%BB%86%E6%AD%A5%E9%AA%A4/"/>
      <url>/2024/04/16/Linux-Centos7%E4%B8%8B%E9%85%8D%E7%BD%AEIP%E5%9C%B0%E5%9D%80%E7%9A%84%E8%AF%A6%E7%BB%86%E6%AD%A5%E9%AA%A4/</url>
      
        <content type="html"><![CDATA[<p>@<a href="这里写目录标题">TOC</a></p><h1 id=""><a href="#" class="headerlink" title=" "></a> </h1><h2 id="-1"><a href="#-1" class="headerlink" title=" "></a> </h2><h3 id="-2"><a href="#-2" class="headerlink" title=" "></a> </h3><p><strong><code>有很多萌新刚开始充满好奇的开始学习Linux操作系统 第一步就会卡在ip地址的配置上 我当时也是 所以我打算出这一篇关于ip地址配置的所有步骤 其中也会写下我遇到的问题和踩过的坑。</code></strong><br><img src="bfb732f9c61d4bd7a1d64572b16a352b.jpeg" alt="在这里插入图片描述"></p><h1 id="一、网络连接"><a href="#一、网络连接" class="headerlink" title="一、网络连接"></a>一、网络连接</h1><p>首先要清楚 网络的连接配置包括 **<a href="">IP地址、子网掩码、网关</a>**等<br>这些都是配置好一个主机ip地址最基本需要的</p><h2 id="1-定义好网络连接的信息"><a href="#1-定义好网络连接的信息" class="headerlink" title="1.定义好网络连接的信息"></a>1.定义好网络连接的信息</h2><ul><li><strong>我们先定义好我们的网络连接的一些信息</strong></li></ul><ol><li><p>首先linux的ip地址为192.168.123.101</p></li><li><p>其次网关为192.168.123.2</p></li><li><p>DNS为114.114.114.114</p></li></ol><h1 id="二、网卡信息的配置"><a href="#二、网卡信息的配置" class="headerlink" title="二、网卡信息的配置"></a>二、网卡信息的配置</h1><p><strong><code>那么知道了ip地址是什么 该在哪里进行配置呢？</code></strong><br>配置ip地址也叫配置网卡<br>那么在Centos7中 <strong><code>网卡的默认位置在/etc/sysconfig/network-scripts/ifcfg-ens33 下</code></strong>&#x20;</p><ol><li>我们进入这个配置文件中进行查看</li></ol><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-ens33 </span><br></pre></td></tr></table></figure><p><img src="c99536f1d78242628c79fa62f5665278-1714441612207.png" alt="在这里插入图片描述"></p><p><strong>（1） 这是最基本的参数 这个网卡里面有两个比较重要的知识点</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">（1）BOOTPROTO=dhcp //启动网卡的方式 dhcp代表自动获取 但是我们配置ip时通常修改为static（静态）或者none</span><br><span class="line">（2）ONBOOT=no //是否启动网卡 默认为no 我们要改成<span class="built_in">yes</span> 即启动的意思</span><br></pre></td></tr></table></figure><p>（2） <code>记住我们需要添加的三个内容</code></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">IPADDR=192.168.123.101 //指定网卡的ip地址</span><br><span class="line">NETMASK=255.255.255.0   //指定网卡的子网掩码</span><br><span class="line">GATEWAY=192.168.123.2   //指定网卡的网关</span><br><span class="line">DNS1=114.114.114.114 //可选 可以不添加 但是ping外网一定要添加</span><br></pre></td></tr></table></figure><p>（3）配置后的图片如下所示 <img src="2e938f5603e843e2834ce492fb39092f-1714441613714.png" alt="在这里插入图片描述"></p><p>（4） 配置完后我们先按ESC 后面再**<code>同时按住shift和；（；在L的右边）</code>**</p><p><img src="f457851f6de54fc4af5df6366b9ca09f-1714441615450.png" alt="在这里插入图片描述"></p><p>&#x20;（5）然后就会出现这个小： <strong><code>我们输入wq后按回车！</code></strong><br><img src="dbb016dd314c44df8f4fc1b52e897c09-1714441618273.png" alt="在这里插入图片描述"></p><p>（6）之后我们重启网卡试试！！！</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart network //这个就是重启网卡的命令</span><br></pre></td></tr></table></figure><p><img src="5158454510d746ea949007380a0e22e0-1714441619691.png" alt="在这里插入图片描述"><br>成功了！！！没有发生报错！！！<br>成功时候我们就该查看ip地址了 使用下面的参数以查看ip地址</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip a //查看网卡信息</span><br></pre></td></tr></table></figure><p><img src="0d056f4fe6824f9595b0b79c31967d4f-1714441620953.png" alt="在这里插入图片描述"></p><p><strong>是不是感觉有点乱 没事 我们<code>只需要看画了红圈的地方</code></strong><br>是不是可<code>看到192.168.123.101/24</code> 没错 <strong>这就是我们刚刚配置的ip地址</strong></p><h1 id="三、-网络的调试和扩展"><a href="#三、-网络的调试和扩展" class="headerlink" title="三、 网络的调试和扩展"></a>三、 网络的调试和扩展</h1><p><strong>当我们第一次配置好ip地址后也许会获得一些<code>小小的成就感</code> 我也是 <code>这也是我们的一个小小的里程碑</code></strong>！</p><p>但是我们还是需要<code>面临一些问题</code> <strong>配置ip地址的目的就是为了日后我们在linux中配置的一些服务可以在其它客户端上进行使用</strong></p><p>那么首先我们就需要进行<strong><code>让他们互相建立信息的连接吧</code></strong> 这个时候 我们就需要到我们自己的电脑上 <strong><code>打开cmd使用ping命令来尝试建立信息的连接了</code></strong></p><h2 id="1-ping命令测试"><a href="#1-ping命令测试" class="headerlink" title="1. ping命令测试"></a>1. ping命令测试</h2><ol><li>回到我们的电脑 <strong><code>按住win和R 输入cmd</code></strong></li></ol><p><img src="c1e04154cb99949a733ec08eeef0536b-1714441624164.png" alt="image.png"></p><ol><li><p><strong>就像这样 进入后我们使用<code>ping命令进行测试</code></strong></p></li><li><p>ping命令是用于测试网络中两台主机之间的网络是否通畅和网络质量的工具</p></li></ol><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ping <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span></span><br></pre></td></tr></table></figure><h2 id="2-我们可能会遇到下面两种情况"><a href="#2-我们可能会遇到下面两种情况" class="headerlink" title="2.  我们可能会遇到下面两种情况"></a>2.  我们可能会遇到下面两种情况</h2><h3 id="（1）显示报文的返回时间"><a href="#（1）显示报文的返回时间" class="headerlink" title="（1）显示报文的返回时间"></a>（1）显示报文的返回时间</h3><p><img src="379f9761a4f3b25ce416e493941c38b2-1714441625218.png" alt="image.png"></p><p><strong><code>首先就是像这样的 这就说明你和虚拟机已经建立了连接 如果你是这样 那么后面的内容你就可以掠过了</code></strong></p><p>还有另一种情况</p><h3 id="（2）-TLL传输过程过期"><a href="#（2）-TLL传输过程过期" class="headerlink" title="（2） TLL传输过程过期"></a>（2） TLL传输过程过期</h3><p><img src="06569e6f2097b60d033a988ef0736cd2-1714441626352.png" alt="image.png"></p><p>如果你是这一种 那么就跟着我下面来吧</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.首先如果遇到这个情况 那么有可能是你在VM的虚拟网络编辑器中的ip设置有问题</span><br><span class="line">2.也有可能是你的网卡问日</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="1-可能是你的虚拟网络编辑器的问题"><a href="#1-可能是你的虚拟网络编辑器的问题" class="headerlink" title="1.  可能是你的虚拟网络编辑器的问题"></a>1.  可能是你的虚拟网络编辑器的问题</h4><pre><code>解决方法如下：（1）打开vm 找到左上角的编辑按钮&amp;#x20;![image.png](https://img-blog.csdnimg.cn/img_convert/9b0d4bc4f813c44ce4b939c9b3c8562f.png)</code></pre><p>（2）  点击虚拟网络编辑器 然后点击nat</p><p><img src="16be2bec7c5884070fac8cad1f436a9d-1714441628085.png" alt="image.png"></p><p>（3）修改好后的图片如下&#x20;</p><p><img src="5de23f6ae1420b2a5ad630b02ecb109a-1714441629461.png" alt="image.png"></p><p>（4）进入后我们将网关修改为192.168.123.2</p><p><img src="9923beea78a7c113b38ff287e1488c5e-1714441630825.png" alt="image.png"></p><p>（5）点击确定后我们再重启网卡试试</p><p>（6）</p><p><img src="999df03d98dc74b24b1ca3f2c4b132d8-1714441632115.png" alt="image.png"></p><p>（7）重启网卡</p><pre><code>systemctl restart network</code></pre><p>(8)再次进入cmd 使用ping命令进行测试</p><p><img src="ae4a33f3ca42b2c712c3969a841789d1-1714441633421.png" alt="image.png"></p><p><strong>可以看到 这个时候已经建立连接了</strong></p><p><strong>但是如果你还是不能建立的话 可能是网络连接模式问题</strong></p><h4 id="2-网络连接模式问题"><a href="#2-网络连接模式问题" class="headerlink" title="2.网络连接模式问题"></a>2.网络连接模式问题</h4><p>（1）进入VM 点击虚拟机</p><p><img src="62de690f3440c140cc6eb078c53c8921-1714441634587.png" alt="image.png"></p><p>（2）然后再选项卡最下面找到设置并点击</p><p><img src="f82d434cb61bbb0478ef56b9c72f022f-1714441635595.png" alt="image.png"></p><h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p><strong>网络出现故障的原因很多 这只是最常见的两种 在我们进行配置的时候会出现很多很多奇怪的问题 <code>但是请大家不要灰心 积极百度 也可以私信我</code></strong></p><p>本期的文章到这里差不多就结束了 谢谢大家！！！</p><p><img src="b46b5c656dfc4f0ea33c6c5885ee3354-1714441638511.jpeg" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> IP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 网络建设与运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023年全国职业技能大赛网络建设与运维 Samba服务</title>
      <link href="/2024/04/15/2023%E5%B9%B4%E5%85%A8%E5%9B%BD%E8%81%8C%E4%B8%9A%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E7%BD%91%E7%BB%9C%E5%BB%BA%E8%AE%BE%E4%B8%8E%E8%BF%90%E7%BB%B4-Samba%E6%9C%8D%E5%8A%A1/"/>
      <url>/2024/04/15/2023%E5%B9%B4%E5%85%A8%E5%9B%BD%E8%81%8C%E4%B8%9A%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B%E7%BD%91%E7%BB%9C%E5%BB%BA%E8%AE%BE%E4%B8%8E%E8%BF%90%E7%BB%B4-Samba%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p><code>任务描述：请采用 samba 服务，实现资源共享。 在 linux3 上创建 user00-user19 等 20 个用户；user00 和 user01 添 加到 manager 组，user02 和 user03 添加到 dev 组。把用户 user00- user03 添加到 samba 用户。 配置 linux3 为 samba 服务器,建立共享目录/srv/sharesmb，共享名 与目录名相同。manager 组用户对 sharesmb 共享有读写权限，dev 组 对 sharesmb 共享有只读权限；用户对自己新建的文件有完全权限， 对其他用户的文件只有读权限，且不能删除别人的文件。在本机用 smbclient 命令测试。 在 linux4 修改/etc/fstab,使用用户 user00 实现自动挂载 linux3 的 sharesmb 共享到/sharesmb。</code></p><ol><li>下载相关软件包</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum install -y samba*</span><br></pre></td></tr></table></figure><ol><li>创建用户</li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">for  i in &#123;00..19&#125;; do useradd user$i;done</span><br></pre></td></tr></table></figure><ol><li><code>在 linux3 上创建 user00-user19 等 20 个用户；user00 和 user01 添 加到 manager 组，user02 和 user03 添加到 dev 组。把用户 user00- user03 添加到 samba 用户。</code></li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">28  usermod -aG manager user00</span><br><span class="line">29  usermod -aG manager user01</span><br><span class="line">30  usermod -aG dev user02</span><br><span class="line">31  usermod -aG dev user03</span><br><span class="line">32  smbpasswd -a user00</span><br><span class="line">33  smbpasswd -a user02</span><br><span class="line">34  smbpasswd -a user01</span><br><span class="line">35  smbpasswd -a user03</span><br></pre></td></tr></table></figure><ol><li><code>配置 linux3 为 samba 服务器,建立共享目录/srv/sharesmb，共享名 与目录名相同。manager 组用户对 sharesmb 共享有读写权限，dev 组 对 sharesmb 共享有只读权限；用户对自己新建的文件有完全权限， 对其他用户的文件只有读权限，且不能删除别人的文件。</code></li></ol><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">36  mkdir /srv/sharesmb</span><br><span class="line">37  chmod 777 /srv/sharesmb</span><br><span class="line">38  vim /etc/samba/smb.conf</span><br><span class="line"></span><br><span class="line">[sharesmb]</span><br><span class="line">      path = /srv/sharesmb</span><br><span class="line">      valid users = @manager,@dev</span><br><span class="line">      write list = @manager</span><br><span class="line">      create mask = 0664</span><br><span class="line">      directory mask = 0775</span><br><span class="line">      force create mode = 0664</span><br><span class="line">      force directory mode = 0775</span><br></pre></td></tr></table></figure><ol><li><code>在 linux4 修改/etc/fstab,使用用户 user00 实现自动挂载 linux3 的 sharesmb 共享到/sharesmb。</code></li></ol><h3 id="在-Linux4-上配置自动挂载"><a href="#在-Linux4-上配置自动挂载" class="headerlink" title="在 Linux4 上配置自动挂载"></a>在 Linux4 上配置自动挂载</h3><p>编辑 <code>/etc/fstab</code> 文件，添加一行以自动挂载 sharesmb 共享：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//linux3/sharesmb /sharesmb cifs credentials=/path/to/credentials_file,uid=user00 0 0</span><br></pre></td></tr></table></figure><p>创建凭证文件 <code>/path/to/credentials_file</code> 包含 Samba 用户的凭证信息：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plaintextCopy code</span><br><span class="line">username=user00</span><br><span class="line">password=yourpassword</span><br></pre></td></tr></table></figure><p>确保只有 root 用户能够读取这个文件：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bashCopy code</span><br><span class="line">sudo chmod 600 /path/to/credentials_file</span><br></pre></td></tr></table></figure><p>最后，挂载共享：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bashCopy code</span><br><span class="line">sudo mount -a</span><br></pre></td></tr></table></figure><p>现在，Linux4 上的 sharesmb 共享将会在启动时自动挂载到 /sharesmb 目录。</p>]]></content>
      
      
      <categories>
          
          <category> Samba </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 网络建设与运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>邮件服务器Sendmail的部署</title>
      <link href="/2024/04/15/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8Sendmail%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
      <url>/2024/04/15/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8Sendmail%E7%9A%84%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>@<a href="这里写目录标题">TOC</a></p><h1 id="一、电子邮件系统的组成"><a href="#一、电子邮件系统的组成" class="headerlink" title="一、电子邮件系统的组成"></a>一、电子邮件系统的组成</h1><p>Linux系统中的电子邮件系统包括3个组件：MUA（Mail user Agent，邮件用户代理）、MTA（Mail Transfer Agent，邮件传送代理）、MDA （Mail Dilivery Agent，邮件投送代理）</p><h2 id="1、MUA"><a href="#1、MUA" class="headerlink" title="1、MUA"></a>1、MUA</h2><p><strong><code>MUA是电子邮件系统的客户端程序，它是用户与电子邮件系统的接口</code></strong>，主要负责邮件的发送和接受以及邮件的撰写，阅读等功能，目前主流的用户代理平台有OutLook、foxmail和Linux中的Mail</p><h2 id="2、MTA"><a href="#2、MTA" class="headerlink" title="2、MTA"></a>2、MTA</h2><p><strong><code>MTA是电子邮件系统的服务器程序、它主要负责邮件的存储和转发</code></strong>。最常用的MTA软件由基于Windows平台的Exchange、和基于Linux平台的Sendmail和postfix。</p><h2 id="3、MDA"><a href="#3、MDA" class="headerlink" title="3、MDA"></a>3、MDA</h2><p>MDA又是也称LDA（Local Dilivery Agent，本地投递代理）MTA把邮件投递到邮件接受者所在的邮件服务器<strong><code>MDA则负责把邮件按照接收者的用户名投递到邮箱中</code></strong></p><h2 id="4、MUA，MTA，MDA的协同工作"><a href="#4、MUA，MTA，MDA的协同工作" class="headerlink" title="4、MUA，MTA，MDA的协同工作"></a>4、MUA，MTA，MDA的协同工作</h2><p>总的来说，当使用MUA程序写信时，应用程序会把信件发送给sendmail或者postfix这样的MTA程序。如果信件时寄给局域网或本地主机的，那么MTA程序应该从地址上就可以确定这个信息。</p><h1 id="二、与电子邮件相关的协议"><a href="#二、与电子邮件相关的协议" class="headerlink" title="二、与电子邮件相关的协议"></a>二、与电子邮件相关的协议</h1><p>常用的电子邮件协议有<a href="">SMTP，POP3，IMAP4</a></p><p><a href="https://www.zhihu.com/question/20583641/answer/104529492">SMTP</a>（Simple Mail Transfer Protocol）即简单邮件传输协议，该协议默认工作再TCP的25端口。SMTP属于客户机/服务器类型，它是一组用于由源地址目的地址传送到邮件的规则，由他来控制新建的中转方式，SMTP属于TCP/IP协议簇，它帮助每台计算机再发哦是那个或中专新建时找到下一个目的地。</p><p><a href="">POP3</a>（Post Office Protocol3）即邮局协议的第三个版本。该协议默认工作在TCP的110端口，POP3同样属于客户机/服务器模型，它是规定怎样将个人计算机连接到Internet的邮件服务器和下载电子邮件的协议。它是Internet电子邮件的第一个离线协议标准，POP3允许从服务器上把邮件存储到本地主机即自己的计算机上，同时删除保存在邮件服务器上的邮件。</p><hr><h1 id="三、邮件中继"><a href="#三、邮件中继" class="headerlink" title="三、邮件中继"></a>三、邮件中继</h1><p>&#x20;中继是指要求你的服务器向其他服务器传递邮件的一种请求。一个服务器处理的邮件只有两类，一类是外发的邮件，一类是接收的邮件，前者是本域用户通过服务器要向外部转发的邮件，后者是发给本域用户的。</p><p>&#x20;一个用户不应该处理过路的邮件，就是既不是你的用户转发的，也不是发给你的用户的，而是一个外部用户发给另一个外部用户的。这一行为称为第三方中继。如果是不需要经过验证就可以中继邮件到组织外的，称为Open RELAY（开放中继），“第三方中继”和“开放中继”是要禁止的，但中继是不能关闭的。这里需要了解几个概念。</p><p>（1）<a href="">中继</a>：用户通过服务器将邮件传递到组织外</p><p>（2）<a href="">OPEN RELAY</a>：不受限制的组织外中继，即无验证的用户也可提交中继请求。</p><p>（3）<a href="">第三方中继</a>：由服务器提交的OPEN RELAY 不是从客户端直接提交的。比如网段域是A，我通过服务器B中转邮件到C域，这时服务器B上看待的是连接请求来源于A域的服务器，而邮件既不是服务器B所在域用户提交的，也不是发给B域的，这就是属于第三方中继。这是垃圾邮件的根本。如果用户通过直接连接你的服务器发送邮件，这是无法阻止的，比如群发软件。如果关闭了OPEN RELAY，那么他只能发信到你的组织内用户，无法将邮件中继出组织。&#x20;</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">**sendmail相关配置文档**</span><br><span class="line"></span><br><span class="line">**sendmail.cf**：sendmail核心配置文件，位于/etc/mail/sendmail.cf</span><br><span class="line"></span><br><span class="line">sendmail.mc：sendmail提供sendmail文件模板，通过编辑此文件后再使用m4工具将结果导入sendmail.cf完成配置Sendmail核心配置文件，降低配置复杂性，位于/etc/mail/sendmail.mc</span><br><span class="line"></span><br><span class="line">local-host-name：定义收发邮件服务器的域名和主机别名，位于/etc/mail/local-host-names</span><br><span class="line"></span><br><span class="line">accesss.db：用来设置Sendmail服务器为哪些主机进行转发邮件，位于/etc/mail/access.db</span><br><span class="line"></span><br><span class="line">aliases.db：用来定义邮件别名，位于/etc/mail/aliases.db</span><br><span class="line"></span><br><span class="line">virtusertaable.db:用来设置虚拟账户，位于/etc/mail/virtusertable.db</span><br><span class="line"></span><br><span class="line">***</span><br></pre></td></tr></table></figure><h1 id="四、Sendmail常规服务器配置"><a href="#四、Sendmail常规服务器配置" class="headerlink" title="四、Sendmail常规服务器配置"></a>四、Sendmail常规服务器配置</h1><h3 id="1-Sendmail服务器配置步骤"><a href="#1-Sendmail服务器配置步骤" class="headerlink" title="1.Sendmail服务器配置步骤"></a>1.Sendmail服务器配置步骤</h3><p>如果想要成功地假设Sendmail服务器，除了需要理解其工作原理外，还需要清楚整个设定流程，以及在整个流程中每一步的作用。一个建议Sendmail服务器设定流程主要包含一下几个步骤。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">（1）配置好DNS</span><br><span class="line"></span><br><span class="line">（2）检查是否安装Sendmail</span><br><span class="line"></span><br><span class="line">（3）修改/etc/mail/sendmail.mc</span><br><span class="line"></span><br><span class="line">（4）使用m4工具编译产生sendmail.cf文件，启动Sendmail服务器</span><br><span class="line"></span><br><span class="line">（5）修改/etc/mail/access文件</span><br><span class="line"></span><br><span class="line">（6）编译生成access.db</span><br><span class="line"></span><br><span class="line">（7）修改/etc/mail/local-host-names。</span><br><span class="line"></span><br><span class="line">（8）启动Sendmail服务器</span><br><span class="line"></span><br><span class="line">（9）创建用户</span><br><span class="line"></span><br><span class="line">（10）测试</span><br></pre></td></tr></table></figure><h3 id="2-Sendmail-cf和sendmail-mc"><a href="#2-Sendmail-cf和sendmail-mc" class="headerlink" title="2.Sendmail.cf和sendmail.mc"></a>2.Sendmail.cf和sendmail.mc</h3><p><strong><code>sendmail.cf是Sendmail的核心配置文件</code></strong>，有关Sendmail参数的设定大都需要修改文件。正因如此，sendmail的文件实在太复杂，可以说是天书，为了降低设置的复杂性，人们使用修改sendmail.mc文件来代替直接修改Sendmail.cf文件。</p><p>所以只需要通过修改sendmail.mc，再使用m4工具将结果导入sendmail.cf文件中即可。通过这种方法可以大大降低配置复杂度。、</p><p>sendmail.mc内容非常庞大，但大部分都被注释，以”dnl”开头随后的信息无效，我们再通常配置sendmail服务器的时候，只需要修改以下内容</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">116</span>        DAEMON_OPTIONS(`Port<span class="operator">=</span>smtp,Addr<span class="operator">=</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>, Name<span class="operator">=</span>MTA<span class="string">&#x27;)dnl</span></span><br></pre></td></tr></table></figure><p>在括号中的Addr字段表示SMTP协议侦听的地址为127.0.0.1.我们在通常的配置中，<strong><code>需要将其改为题目所要求的网段或者0.0.0.0以来加大侦听范围</code></strong>，否则，邮件将无法正常发送信件</p><h3 id="3-m4工具的使用"><a href="#3-m4工具的使用" class="headerlink" title="3.m4工具的使用"></a>3.m4工具的使用</h3><p>m4工具是一个强大的宏处理过滤器，他的复杂性完全不亚于sendmail.cf。在使用m4工具之前，请先确认服务器上安装了该软件包，默认情况下m4工具是被安装好的。</p><p>在配置过程中，需要<em>利用m4工具将编辑后的sendmail.mc文件内容重定向到sendmail.cf文件中。这样可避免去直接编辑复杂的sendmail.cf文件</em>；如下所示：</p><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line">m4 sendmail.<span class="property">mc</span> &gt; sendmail.<span class="property">cf</span> </span><br></pre></td></tr></table></figure><p><strong>注意：<code>此时如果sendmail报错，那么就是因为sendmail.cf中有错误，在第39行多空了一个，我们只需要把那多的一行删掉，在重启即可。</code></strong></p><h3 id="4-local-host-names文件"><a href="#4-local-host-names文件" class="headerlink" title="4.local-host-names文件"></a>4.local-host-names文件</h3><p>该文件用来定义收发邮件的主机别名，<strong><code>默认情况下该文件位于/etc/mail下</code></strong>，为了使sendmail服务正常工作，必须在该文件中添加主机名称或主机别名，否则提示错误。</p><p>假如邮件服务器有两个主机名称，<strong>分别是mail.skils.com和mail1.skills.com，而只想收到发给mail.skills.com的信件，发给mail1.skills.com的信件则不受，那么需要添加mail.skills.com到loxal-host-names中</strong>；</p><p>如下所示：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">local</span><span class="operator">-</span>host<span class="operator">-</span>names <span class="operator">-</span> include <span class="keyword">all</span> aliases <span class="keyword">for</span> your machine here.</span><br><span class="line">mail.skills.com</span><br><span class="line">skills.com</span><br></pre></td></tr></table></figure><p><em>如果想要所有主机别名都可以收发邮件，请参照上述例子把所有的主机别名都添加到文件中即可。</em></p><h3 id="5-别名和群发设置："><a href="#5-别名和群发设置：" class="headerlink" title="5.别名和群发设置："></a>5.别名和群发设置：</h3><p>用户别名是经常用到的一个功能，别名就是给用户起另外一个名字。例如<strong>给用户A起个别名为B，则以后发给B的邮件实际A用户来接收。</strong></p><p><strong>为什么要用到这个功能呢？</strong>&#x20;</p><ul><li>首先root用户无法收发邮件，如果有发给root用户的信件必须为root用户建立别名。</li></ul><!----><ul><li>其次群发设置需要用到这个功能，企业内部在使用邮件服务的时候，经常会按照部门群发信件，发给财务部的邮件只能财务部的所有人才会收到，其他则收不到。</li></ul><p><strong>使用格式如下：</strong></p><pre><code>aliases:   user[,user,user,...]</code></pre><p>其中<strong>alias</strong>为<strong>邮件地址中的用户名</strong>，而<strong>recioient</strong>是<strong>实际接收该邮件的用户</strong>。下面通过几个例子来说明用户别名的设置方法：</p><p>例1：</p><p><strong>为user1账号设置别名为toto，为user2账号设置别名为popo</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> named]# vim <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>aliases     <span class="operator">/</span><span class="operator">/</span>创建aliases文件并对其修改</span><br><span class="line">toto:   user1</span><br><span class="line">popo:   user2</span><br></pre></td></tr></table></figure><p>例2：</p><p>假设<strong>网络组在此服务器内都有一个电子邮件账户</strong>，现在我们要给网络组的<strong>所有成员发送一封相同内容的电子邮件</strong>。可以使用别名机制中的有机胺列表功能实现：</p><pre><code>group: net1,ne2,net3,....</code></pre><h3 id="6-利用Access文件设置邮件中继"><a href="#6-利用Access文件设置邮件中继" class="headerlink" title="6.利用Access文件设置邮件中继"></a>6.利用Access文件设置邮件中继</h3><p>Access文件用于控制邮件中继（RELAY）和邮件的进出管理。可以利用Access文件来限制哪些客户端可以使用此邮件服务器来转发邮件。例如限制莫某个域的客户端拒绝转发邮件，也可以限制某个网段的客户端可以转发邮件。其格式如下：</p><pre><code>对象                处理方式</code></pre><p>对象和处理方式的表现形式并不单一，每一行都包含对象和对它们的处理方式。下面对常见的对象和处理方式的类型做简单介绍。</p><p>Access文件中的每一行都具有一个对象和一种处理方式，我们要根据环境需要进行二者的组合。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Connect</span>:localhost.localdomain           RELAY</span><br><span class="line"><span class="keyword">Connect</span>:localhost                              RELAY</span><br><span class="line"><span class="keyword">Connect</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>                     RELAY</span><br></pre></td></tr></table></figure><hr><p>例：<strong>允许192.168.0.0网段</strong>自由发送邮件，但<strong>拒绝客户端ftp.skills.com</strong>及除192.168.123.101以外的192.168.123.0网段的所有主机</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Connect</span>:localhost.localdomain          RELAY</span><br><span class="line"><span class="keyword">Connect</span>:localhost                             RELAY</span><br><span class="line"><span class="keyword">Connect</span>:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>                               RELAY</span><br><span class="line"><span class="keyword">Connect</span>:<span class="number">192.168</span><span class="number">.0</span>                               RELAY</span><br><span class="line"><span class="keyword">Connect</span>:<span class="number">192.168</span><span class="number">.123</span>                            REJECT</span><br><span class="line"><span class="keyword">Connect</span>:ftp.skills.com                           REJECT</span><br><span class="line"><span class="keyword">Connect</span>:<span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span>                       OK</span><br></pre></td></tr></table></figure><p>最后使用makemap命令生成新的access.db数据库</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> named]# cd <span class="operator">/</span>etc<span class="operator">/</span>mail</span><br><span class="line">[root<span class="variable">@localhost</span> mail]# makemap hash access.db<span class="operator">&lt;</span>access</span><br></pre></td></tr></table></figure><h3 id="7-设置SMTP验证"><a href="#7-设置SMTP验证" class="headerlink" title="7.设置SMTP验证"></a>7.设置SMTP验证</h3><p>利用access.db文件实现邮件中继代理时，对于利用拨号上网的用户不太现实，此时可以使用SMTP验证机制对指定的用户进行邮件中继。</p><p>编辑/etc/mail/sendmail.mc文件，修改和认证相关的配置行。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">52</span>  <span class="title function_">TRUST_AUTH_MECH</span>(<span class="string">`EXTERNAL DIGEST-MD5 CRAM-MD5 LOGIN PLAIN&#x27;)dnl</span></span><br><span class="line"><span class="string">53  define(`</span>confAUTH_MECHANISMS<span class="string">&#x27;, `EXTERNAL GSSAPI DIGEST-MD5 CRAM-MD5 LOGIN PLAIN&#x27;</span>)dnl</span><br><span class="line"><span class="number">78</span> <span class="title function_">FEATURE</span>(<span class="string">`no_default_msa&#x27;, `</span>dnl<span class="string">&#x27;)dnl</span></span><br><span class="line"><span class="string">125 DAEMON_OPTIONS(`Port=submission, Name=MSA, M=Ea&#x27;</span>)dnl</span><br></pre></td></tr></table></figure><p>删除这几行每行开头的dnl</p><p>（1）<strong><code>TRUST_AUTH_MECH的作用是使Sendmail不管Access文件中如何设置，都能relay那些通过LOGIN、PLAIN、或DIGEST-MD5方式验证的邮件</code></strong></p><p>（2）<strong><code>confAUTH_MECHANISMS的作用是确定系统的认证方式</code></strong></p><p>（3）<strong><code>`Port=submission, Name=MSA, M=Ea的作用是开启认证</code></strong>，并以子进程运行MSA，实现邮件的账户和密码的验证。</p><h4 id="7-2-使用m4命令重新生成-etc-mail-sendmail-cf文件"><a href="#7-2-使用m4命令重新生成-etc-mail-sendmail-cf文件" class="headerlink" title="7.2 使用m4命令重新生成/etc/mail/sendmail.cf文件"></a>7.2 使用m4命令重新生成/etc/mail/sendmail.cf文件</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> mail]# m4 <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>sendmail.mc <span class="operator">&gt;</span> <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>sendmail.cf</span><br></pre></td></tr></table></figure><h4 id="7-3-重启sendmail服务-和-saslauthd服务"><a href="#7-3-重启sendmail服务-和-saslauthd服务" class="headerlink" title="7.3 重启sendmail服务 和 saslauthd服务"></a>7.3 重启sendmail服务 和 saslauthd服务</h4><pre><code>systemctl restart sendmail  saslauthd</code></pre><h3 id="8-设置邮箱容量"><a href="#8-设置邮箱容量" class="headerlink" title="8.设置邮箱容量"></a>8.设置邮箱容量</h3><p><strong>设置用户邮件大小设置</strong>，原来限制为2MB，建议设置为20MB，注意<strong><code>单位为字节</code></strong>。2000000=2M，20000000=20M</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">36</span> <span class="keyword">define</span>(`UUCP_MAILER_MAX<span class="string">&#x27;, `20000000&#x27;</span>)dnl</span><br></pre></td></tr></table></figure><p>设置本地邮箱的域名</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">157</span> <span class="title function_">LOCAL_DOMAIN</span>(<span class="string">`skills.com&#x27;)dnl</span></span><br></pre></td></tr></table></figure><p>设置完毕，使用m4工具生成新的sendmail.cf文件</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">m4 <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>sednmail.mc <span class="operator">&gt;</span> <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>sendmail.cf</span><br></pre></td></tr></table></figure><hr><h2 id="五、设置虚拟域用户"><a href="#五、设置虚拟域用户" class="headerlink" title="五、设置虚拟域用户"></a>五、设置虚拟域用户</h2><p><strong>使用虚拟域。可以将发送给虚拟域的邮件投递到真是域的用户邮箱中</strong>。利用虚拟域也可以实现邮件列表的功能。这里的虚拟域可以是不存在的域，而真实域既可以是本地域，也可以是远程域名Inter中的域。</p><p>虚拟域是真实域的别名，通过虚拟域用户表/etc/mail/virtusertable.db，实现了虚拟域的邮件地址到真实域的邮件地址的重定向。</p><p><strong>虚拟域用户表/etc/mail/virtuserable.db</strong>文件<strong><code>是通过/etc/mail/virtuserable文件生成</code></strong>的。如下所示</p><pre><code>虚拟域地址                真实域地址</code></pre><p>虚拟域地址和真实域地址之间用Tab分隔，该文件中虚拟域地址和真实域地址可以写完整也可以只有域名或用户名，如下几种格式皆可</p><pre><code>@sales.com        @smile.comuser1@smile.com        user2user1@smile.com        user1,user2,user3</code></pre><p>如果要实现邮件列表功能，则各个真实域地址之间用逗号分隔。</p><hr><h3 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h3><p>Sendmail邮件服务器的域为smile.com，为该邮件服务器设置虚拟域skills.com。并为user1\@smile.com指定虚拟域名别名user1\@skills.com。</p><p>具体步骤如下：</p><h4 id="（1）配置DNS服务器，并设置虚拟域的MX资源记录"><a href="#（1）配置DNS服务器，并设置虚拟域的MX资源记录" class="headerlink" title="（1）配置DNS服务器，并设置虚拟域的MX资源记录"></a>（1）配置DNS服务器，并设置虚拟域的MX资源记录</h4><p>1  修改DNS区域解析文件，添加skills.com域</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">zone &quot;skills.com&quot; <span class="keyword">IN</span> &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;1&quot;;</span><br><span class="line">        allow<span class="operator">-</span><span class="keyword">update</span> &#123; <span class="keyword">none</span>; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line">zone &quot;123.168.192.in-addr.arpa&quot; <span class="keyword">IN</span> &#123;</span><br><span class="line">        type master;</span><br><span class="line">        file &quot;2&quot;;</span><br><span class="line">        allow<span class="operator">-</span><span class="keyword">update</span> &#123; <span class="keyword">none</span>; &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2  创建并编辑skills.com区域的正向解析文件/var/named/1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /var/named/</span><br><span class="line">cp -a named.localhost 1</span><br><span class="line">cp -a named.loopback 2</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">$TTL <span class="number">1</span>D</span><br><span class="line">@       <span class="keyword">IN</span> SOA  @ rname.invalid. (</span><br><span class="line">                                        <span class="number">0</span>       ; serial</span><br><span class="line">                                        <span class="number">1</span>D      ; refresh</span><br><span class="line">                                        <span class="number">1</span>H      ; retry</span><br><span class="line">                                        <span class="number">1</span>W      ; expire</span><br><span class="line">                                        <span class="number">3</span>H )    ; minimum</span><br><span class="line">        NS      @</span><br><span class="line">        A       <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">        AAAA    ::<span class="number">1</span></span><br><span class="line">@       <span class="keyword">IN</span>      MX      <span class="number">10</span>      mail.skills.com</span><br><span class="line">mail    <span class="keyword">IN</span>      A       <span class="number">192.168</span><span class="number">.123</span><span class="number">.101</span></span><br></pre></td></tr></table></figure><h4 id="（2）-将虚拟域skills-com加入到-etc-mail-local-host-named文件中"><a href="#（2）-将虚拟域skills-com加入到-etc-mail-local-host-named文件中" class="headerlink" title="（2）  将虚拟域skills.com加入到/etc/mail/local-host-named文件中"></a>（2）  将虚拟域skills.com加入到/etc/mail/local-host-named文件中</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">echo &quot;skills.com&quot; <span class="operator">&gt;&gt;</span> <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span><span class="keyword">local</span><span class="operator">-</span>host<span class="operator">-</span>names </span><br></pre></td></tr></table></figure><hr><h4 id="（3）配置邮件中继"><a href="#（3）配置邮件中继" class="headerlink" title="（3）配置邮件中继"></a>（3）配置邮件中继</h4><p><strong>利用vim编辑器编辑/etc/mail/access文件</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> named]# vim <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>access</span><br><span class="line">skills.com        RELAY</span><br></pre></td></tr></table></figure><p>使用makemap命令生成/etc/mail/access.db文件</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> named]# makemap hash <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>access.db <span class="operator">&lt;</span> <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>access</span><br></pre></td></tr></table></figure><p>设置虚拟域列表/etc/mail/virtuserable,并生成/etc/mail/virtuserable.db</p><p><strong>使用vim编辑器编辑/etc/mail.access文件</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">vim <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>virtusertable</span><br><span class="line">user1<span class="variable">@skils</span>.com      user1<span class="variable">@smile</span>.com</span><br></pre></td></tr></table></figure><p>生成新的/etc/mail/virtusertable.db文件</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">makemap hash <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>virtusertable.db <span class="operator">&lt;</span> <span class="operator">/</span>etc<span class="operator">/</span>mail<span class="operator">/</span>virtusertable</span><br></pre></td></tr></table></figure><p>重启sendmail服务 注：若此处重启失败 可以使用systemctl status sendmail(named)  -l查看服务状态  一般来说查看的就是named.conf，sendmail.cf两个文件</p><hr><h2 id="六、-调试Sendmail服务器"><a href="#六、-调试Sendmail服务器" class="headerlink" title="六、 调试Sendmail服务器"></a>六、 调试Sendmail服务器</h2><h3 id="1-使用Telnet登录服务器并发出邮件"><a href="#1-使用Telnet登录服务器并发出邮件" class="headerlink" title="1.使用Telnet登录服务器并发出邮件"></a>1.使用Telnet登录服务器并发出邮件</h3><p>当Sendmail服务器搭建好后，使用telnet工具可以快速的登录服务器的25端口并发出邮件。</p><h3 id="2-下载telnet工具及mail工具"><a href="#2-下载telnet工具及mail工具" class="headerlink" title="2.下载telnet工具及mail工具"></a>2.下载telnet工具及mail工具</h3><p>（mail工具可以快速的帮助我们查看各个邮件用户的邮箱）</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y telnet mailx</span><br></pre></td></tr></table></figure><p><strong>下载完毕后，我们关闭防火墙</strong></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">setenforce <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="3-登录sendmail服务器"><a href="#3-登录sendmail服务器" class="headerlink" title="3.登录sendmail服务器"></a>3.登录sendmail服务器</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> mail]#  </span><br><span class="line">[root<span class="variable">@localhost</span> mail]# telnet localhost <span class="number">25</span>      <span class="operator">/</span><span class="operator">/</span>利用telnet命令登录邮件服务器<span class="number">25</span>端口</span><br><span class="line">Trying ::<span class="number">1.</span>..</span><br><span class="line">telnet: <span class="keyword">connect</span> <span class="keyword">to</span> address ::<span class="number">1</span>: Connection refused</span><br><span class="line">Trying <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>...</span><br><span class="line">Connected <span class="keyword">to</span> localhost.</span><br><span class="line"><span class="keyword">Escape</span> <span class="type">character</span> <span class="keyword">is</span> <span class="string">&#x27;^]&#x27;</span>.</span><br><span class="line"><span class="number">220</span> localhost.localdomain ESMTP Sendmail <span class="number">8.14</span><span class="number">.7</span><span class="operator">/</span><span class="number">8.14</span><span class="number">.7</span>; Mon, <span class="number">15</span> May <span class="number">2023</span> <span class="number">00</span>:<span class="number">26</span>:<span class="number">24</span> <span class="operator">+</span><span class="number">0800</span></span><br><span class="line">mail <span class="keyword">from</span>:user1<span class="variable">@smile</span>.com    <span class="operator">/</span><span class="operator">/</span>设置发信人地址</span><br><span class="line"><span class="number">250</span> <span class="number">2.1</span><span class="number">.0</span> user1<span class="variable">@smile</span>.com... Sender ok</span><br><span class="line">rcpt <span class="keyword">to</span>:user2<span class="variable">@skills</span>.com     <span class="operator">/</span><span class="operator">/</span>设置收件人地址</span><br><span class="line"><span class="number">250</span> <span class="number">2.1</span><span class="number">.5</span> user2<span class="variable">@skills</span>.com... Recipient ok</span><br><span class="line">data          <span class="operator">/</span><span class="operator">/</span>data表示要开始写信内容了</span><br><span class="line"><span class="number">354</span> Enter mail, <span class="keyword">end</span> <span class="keyword">with</span> &quot;.&quot; <span class="keyword">on</span> a line <span class="keyword">by</span> itself</span><br><span class="line">this <span class="keyword">is</span> a happy mail   </span><br><span class="line">wish you happy everyday<span class="operator">!</span>            <span class="operator">/</span><span class="operator">/</span>这两行都是信件的内容</span><br><span class="line">.                <span class="operator">/</span><span class="operator">/</span>“.”表示结束信件内容 千万不要漏掉了</span><br><span class="line"><span class="number">250</span> <span class="number">2.0</span><span class="number">.0</span> <span class="number">34</span>EGQO8V001584 Message accepted <span class="keyword">for</span> delivery</span><br><span class="line">quit          <span class="operator">/</span><span class="operator">/</span>退出telnet服务器的命令</span><br><span class="line"><span class="number">221</span> <span class="number">2.0</span><span class="number">.0</span> localhost.localdomain closing connection</span><br></pre></td></tr></table></figure><p><strong>telnet中，每当我们输入过指令后，服务器都会回复一段数字代码。熟知这些代码，有利于我们更好的掌握sendmail并判断服务器错误原因。</strong></p><h3 id="4-常见的回应代码及其含义"><a href="#4-常见的回应代码及其含义" class="headerlink" title="4.常见的回应代码及其含义"></a>4.常见的回应代码及其含义</h3><div class="table-container"><table><thead><tr><th style="text-align:left">回应代码</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">220</td><td style="text-align:left">表示SMTP服务器开始提供服务</td></tr><tr><td style="text-align:left">250</td><td style="text-align:left">表示命令指定完毕，回应正确</td></tr><tr><td style="text-align:left">354</td><td style="text-align:left">开始输入信件的内容，并以“.”结束</td></tr><tr><td style="text-align:left">500</td><td style="text-align:left">表示SMTP语法错，无法执行命令</td></tr><tr><td style="text-align:left">501</td><td style="text-align:left">表示指令参数或引述的语法错误</td></tr><tr><td style="text-align:left">502</td><td style="text-align:left">表示不支持该命令</td></tr></tbody></table></div><hr><h3 id="5-利用Mailx命令接收电子邮件"><a href="#5-利用Mailx命令接收电子邮件" class="headerlink" title="5.利用Mailx命令接收电子邮件"></a>5.利用Mailx命令接收电子邮件</h3><p>安装好并重启mailx后，我们可以输入以下命令来查询邮件</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> mail]# mail <span class="operator">-</span>u user2     使用命令查看user2的邮箱</span><br><span class="line">Heirloom Mail version <span class="number">12.5</span> <span class="number">7</span><span class="operator">/</span><span class="number">5</span><span class="operator">/</span><span class="number">10.</span>  Type ? <span class="keyword">for</span> help.</span><br><span class="line">&quot;/var/mail/user2&quot;: <span class="number">1</span> message <span class="number">1</span> <span class="keyword">new</span> </span><br><span class="line"><span class="operator">&gt;</span>N  <span class="number">1</span> user1<span class="variable">@smile</span>.com       Mon May <span class="number">15</span> <span class="number">00</span>:<span class="number">27</span>  <span class="number">13</span><span class="operator">/</span><span class="number">520</span>    <span class="operator">/</span><span class="operator">/</span>邮件编号</span><br><span class="line"><span class="operator">&amp;</span> <span class="number">1</span>    <span class="operator">/</span><span class="operator">/</span>查看邮件编号<span class="number">1</span></span><br><span class="line">Message  <span class="number">1</span>:</span><br><span class="line"><span class="keyword">From</span> user1<span class="variable">@smile</span>.com  Mon May <span class="number">15</span> <span class="number">00</span>:<span class="number">27</span>:<span class="number">49</span> <span class="number">2023</span>   <span class="operator">/</span><span class="operator">/</span>信件来源与发信时间</span><br><span class="line"><span class="keyword">Return</span><span class="operator">-</span>Path: <span class="operator">&lt;</span>user1<span class="variable">@smile</span>.com<span class="operator">&gt;</span>     <span class="operator">/</span><span class="operator">/</span>返回路径</span><br><span class="line"><span class="type">Date</span>: Mon, <span class="number">15</span> May <span class="number">2023</span> <span class="number">00</span>:<span class="number">26</span>:<span class="number">24</span> <span class="operator">+</span><span class="number">0800</span>  <span class="operator">/</span><span class="operator">/</span>接收时间</span><br><span class="line"><span class="keyword">From</span>: user1<span class="variable">@smile</span>.com </span><br><span class="line">X<span class="operator">-</span>Authentication<span class="operator">-</span>Warning: localhost.localdomain: localhost [<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>] didn<span class="string">&#x27;t use HELO protocol</span></span><br><span class="line"><span class="string">Status: R</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">this is a happy mail</span></span><br><span class="line"><span class="string">wish you happy everyday!    //邮件内容</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&amp; quit   //使用命令退出</span></span><br><span class="line"><span class="string">Held 1 message in /var/mail/user2</span></span><br></pre></td></tr></table></figure><h3 id="6-用户邮件目录-var-spool-mail"><a href="#6-用户邮件目录-var-spool-mail" class="headerlink" title="6.用户邮件目录/var/spool/mail"></a>6.用户邮件目录/var/spool/mail</h3><p>我们可以在邮件服务器上进行用户邮件的查看，这可以确保邮件服务器邮件再正常工作了，<strong><code>Sendmail再/var/spool/mail目录中为每个用户分别建立单独的文件用于存放每个用户的邮件</code></strong>。<strong>这些名字和用户名是相同的</strong></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> mail]# ls <span class="operator">/</span>var<span class="operator">/</span>spool<span class="operator">/</span>mail</span><br><span class="line">user1  user2</span><br></pre></td></tr></table></figure><hr><h3 id="7-邮件队列"><a href="#7-邮件队列" class="headerlink" title="7.邮件队列"></a>7.邮件队列</h3><p>邮件服务器配置成功后，就能够为用户提供E-mail的发送服务了，但是如果接收这些邮件的服务器出现问题，或者因为其他原因导致邮件无法安全到达目的地。这封邮件可能就会失踪。所以sendmail采用了邮件队列来保存这些发送不成功的信件。</p><p>我们可以通过mailq来查询</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@localhost</span> mail]# mailq</span><br><span class="line">                <span class="operator">/</span>var<span class="operator">/</span>spool<span class="operator">/</span>mqueue (<span class="number">1</span> request)</span><br><span class="line"><span class="comment">-----Q-ID----- --Size-- -----Q-Time----- ------------Sender/Recipient-----------</span></span><br><span class="line"><span class="number">34</span>EGNRUH001537       <span class="number">40</span> Mon May <span class="number">15</span> <span class="number">00</span>:<span class="number">24</span> &quot;this is a happy mail&quot;<span class="operator">&lt;</span>user1<span class="variable">@skills</span>.com</span><br><span class="line">                 (host map: lookup (smile.com): deferred)</span><br><span class="line">                                         user2<span class="variable">@smile</span>.com</span><br><span class="line">                Total requests: <span class="number">1</span></span><br></pre></td></tr></table></figure><p><strong>其中相关参数的说明：</strong></p><p>Q-ID：表示此封邮件队列的编号</p><p>size：表示邮件的大小</p><p>Q-Time：邮件进入/var/spool/mqueue目录的时间，并说明无法立即发送的原因</p><p>Sender/Recipient：发信人和收信人的邮件地址</p><hr><h2 id="七、邮件服务器配置常记的几件事"><a href="#七、邮件服务器配置常记的几件事" class="headerlink" title="七、邮件服务器配置常记的几件事"></a>七、邮件服务器配置常记的几件事</h2><p>第一件：一定把DNS服务器配置好。保证DNS服务器和sendmail服务器、客户端之间的通信正常</p><p>第二件：关闭防火墙 或者 打开服务器的端口</p><p>第三件：将selinux关闭    可以使用setenfroce 0</p><p>第四件：注意网卡在虚拟机的连接方式&#x20;</p>]]></content>
      
      
      <categories>
          
          <category> Sendmail </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 网络建设与运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/04/14/hello-world/"/>
      <url>/2024/04/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>Categories</title>
      <link href="/Categories/index-1.html"/>
      <url>/Categories/index-1.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/Categories/index.html"/>
      <url>/Categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>Archives</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><h2 id="大家好-我是WaitAyaka-下面是我的基础信息"><a href="#大家好-我是WaitAyaka-下面是我的基础信息" class="headerlink" title="大家好 我是WaitAyaka 下面是我的基础信息"></a>大家好 我是WaitAyaka 下面是我的基础信息</h2><ul><li>年龄：17</li><li>身高：?</li><li>性别：男</li><li>爱好：爱好有很多</li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>gallery</title>
      <link href="/Gallery/index.html"/>
      <url>/Gallery/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/wanxiaB.jpeg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Top榜</div>  <p>我心目中最好看的照片</p>  <a href='/Gallery/wanxiaB'></a>  </figcaption>  </figure>     <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/yuanshen1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">原神</div>  <p>Genshin</p>  <a href='/Gallery/genshin'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/ganjiang.jpeg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">赣江公园</div>  <p>过期的老照片还是会有感觉</p>  <a href='/Gallery/ganjiang'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/riluoA.jpeg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">日落</div>  <p>什么时候还能独自骑着车看日落呢</p>  <a href='/Gallery/sunshinA'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/wanxiaA.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">晚霞</div>  <p>我拍的晚霞包好看的</p>  <a href='/Gallery/wanxiaA'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/xuetianA.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">雪天</div>  <p>冬将军也来了</p>  <a href='/Gallery/xuetian'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/lushanA.jpeg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">庐山一日游</div>  <p>庐山拍的一些照片</p>  <a href='/Gallery/lushan'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/baiyunA.jpeg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">白云</div>  <p>一些白云的集锦</p>  <a href='/Gallery/baiyunA'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/suipai.jpeg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">随拍</div>  <p>随便拍的</p>  <a href='/Gallery/suipai'></a>  </figcaption>  </figure>    <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/img/brotherA.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">我们</div>  <p>我和我的好兄弟们</p>  <a href='/Gallery/brother'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/Tags/index.html"/>
      <url>/Tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/*哔哩哔哩视频适配*/.aspect-ratio {    position: relative;    width: 90%;    height: auto;    padding-bottom: 75%;    margin: 3% auto;    text-align: center;  }  .aspect-ratio iframe {    position: absolute;    width: 100%;    height: 86%;    left: 0;    top: 0;  }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>comment</title>
      <link href="/comment/index.html"/>
      <url>/comment/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/day.js"/>
      <url>/js/day.js</url>
      
        <content type="html"><![CDATA[var d = new Date();m = d.getMonth() + 1;dd = d.getDate();y = d.getFullYear();// 公祭日if (m == 9 && dd == 18) {    document.getElementsByTagName("html")[0].setAttribute("style", "filter: grayscale(60%);");    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今天是九一八事变" + (y - 1931).toString() + "周年纪念日\n🪔勿忘国耻，振兴中华🪔");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 7 && dd == 7) {    document.getElementsByTagName("html")[0].setAttribute("style", "filter: grayscale(60%);");    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今天是卢沟桥事变" + (y - 1937).toString() + "周年纪念日\n🪔勿忘国耻，振兴中华🪔");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 12 && dd == 13) {    document.getElementsByTagName("html")[0].setAttribute("style", "filter: grayscale(60%);");    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今天是南京大屠杀" + (y - 1937).toString() + "周年纪念日\n🪔勿忘国耻，振兴中华🪔");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 8 && dd == 14) {    document.getElementsByTagName("html")[0].setAttribute("style", "filter: grayscale(60%);");    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今天是世界慰安妇纪念日\n🪔勿忘国耻，振兴中华🪔");        sessionStorage.setItem("isPopupWindow", "1");    }}// 节假日if (m == 10 && dd <= 3) {//国庆节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("祝祖国" + (y - 1949).toString() + "岁生日快乐！");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 8 && dd == 15) {//搞来玩的，小日子投降    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("小日子已经投降" + (y - 1945).toString() + "年了😃");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 1 && dd == 1) {//元旦节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire(y.toString() + "年元旦快乐！🎉");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 3 && dd == 8) {//妇女节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("各位女神们，妇女节快乐！👩");        sessionStorage.setItem("isPopupWindow", "1");    }}l = ["非常抱歉，因为不可控原因，博客将于明天停止运营！", "好消息，日本没了！", "美国垮了，原因竟然是川普！", "微软垮了！", "你的电脑已经过载，建议立即关机！", "你知道吗？站长很喜欢你哦！", "一分钟有61秒哦", "你喜欢的人跟别人跑了！"]if (m == 4 && dd == 1) {//愚人节，随机谎话    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire(l[Math.floor(Math.random() * l.length)]);        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 5 && dd == 1) {//劳动节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("劳动节快乐\n为各行各业辛勤工作的人们致敬！");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 5 && dd == 4) {//青年节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("青年节快乐\n青春不是回忆逝去,而是把握现在！");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 5 && dd == 20) {//520    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("今年是520情人节\n快和你喜欢的人一起过吧！💑");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 7 && dd == 1) {//建党节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("祝中国共产党" + (y - 1921).toString() + "岁生日快乐！");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 9 && dd == 10) {//教师节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("各位老师们教师节快乐！👩‍🏫");        sessionStorage.setItem("isPopupWindow", "1");    }}if (m == 12 && dd == 25) {//圣诞节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("圣诞节快乐！🎄");        sessionStorage.setItem("isPopupWindow", "1");    }}//传统节日部分if ((y == 2023 && m == 4 && dd == 5) || (y == 2024 && m == 4 && dd == 4) || (y == 2025 && m == 4 && dd == 4)) {//清明节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("清明时节雨纷纷,一束鲜花祭故人💐");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((y == 2023 && m == 12 && dd == 22) || (y == 2024 && m == 12 && dd == 21) || (y == 2025 && m == 12 && dd == 21)) {//冬至    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("冬至快乐\n快吃上一碗热热的汤圆和饺子吧🧆");        sessionStorage.setItem("isPopupWindow", "1");    }}var lunar = calendarFormatter.solar2lunar();//农历采用汉字计算，防止出现闰月导致问题if ((lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初六") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初五") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初四") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初三") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初二") || (lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "初一") || (lunar["IMonthCn"] == "腊月" && lunar["IDayCn"] == "三十") || (lunar["IMonthCn"] == "腊月" && lunar["IDayCn"] == "廿九")) {    //春节，本来只有大年三十到初六，但是有时候除夕是大年二十九，所以也加上了    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire(y.toString() + "年新年快乐\n🎊祝你心想事成，诸事顺利🎊");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "正月" && lunar["IDayCn"] == "十五")) {    //元宵节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("元宵节快乐\n送你一个大大的灯笼🧅");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "五月" && lunar["IDayCn"] == "初五")) {    //端午节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("端午节快乐\n请你吃一条粽子🍙");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "七月" && lunar["IDayCn"] == "初七")) {    //七夕节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("七夕节快乐\n黄昏后,柳梢头,牛郎织女来碰头");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "八月" && lunar["IDayCn"] == "十五")) {    //中秋节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("中秋节快乐\n请你吃一块月饼🍪");        sessionStorage.setItem("isPopupWindow", "1");    }}if ((lunar["IMonthCn"] == "九月" && lunar["IDayCn"] == "初九")) {    //重阳节    if (sessionStorage.getItem("isPopupWindow") != "1") {        Swal.fire("重阳节快乐\n独在异乡为异客，每逢佳节倍思亲");        sessionStorage.setItem("isPopupWindow", "1");    }}// 切换主题提醒// if (y == 2022 && m == 12 && (dd >= 18 && dd <= 20)) {//     if (sessionStorage.getItem("isPopupWindow") != "1") {//         Swal.fire("网站换成冬日限定主题啦⛄");//         sessionStorage.setItem("isPopupWindow", "1");//     }// }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/ganjiang/index.html"/>
      <url>/Gallery/ganjiang/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713351841837.jpeg" alt="1713351841837"></p><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352117971.jpeg" alt="1713352117971"></p><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352118287.jpeg" alt="1713352118287"></p><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352118582.jpeg" alt="1713352118582"></p><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352118983.jpeg" alt="1713352118983"></p><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352119292.jpeg" alt="1713352119292"></p><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352119393.jpeg" alt="1713352119393"></p><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352119737.jpeg" alt="1713352119737"></p><p><img src="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352119849.jpeg" alt="1713352119849"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/baiyunA/index.html"/>
      <url>/Gallery/baiyunA/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="1713351841768.jpeg" alt="1713351841768"></p><p><img src="1713351839449.jpeg" alt="1713351839449"></p><p><img src="1713351841121.jpeg" alt="1713351841121"></p><p><img src="1713351837469.jpeg" alt="1713351837469"></p><p><img src="1713351838719.jpeg" alt="1713351838719"></p><p><img src="1713351837238.jpeg" alt="1713351837238"></p><p><img src="1713351842823.jpeg" alt="1713351842823"></p><p><img src="1713351848222.jpeg" alt="1713351848222"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/genshin/index.html"/>
      <url>/Gallery/genshin/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="1256318.jpg" alt="1256318"></p><p><img src="1275964.jpg" alt="1275964"><br><img src="1297318.jpg" alt="1297318"><br><img src="1341977.jpg" alt="1341977"></p><p><img src="1327796.jpeg" alt="img"></p><p><img src="1298767.jpeg" alt="img"></p><p><img src="1166471.jpeg" alt="img"><img src="1138253.jpg" alt="img"></p><p><a href="https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352114983.jpeg">https://gitee.com/WaitAyaka/wait-ayaka-pictures/raw/master/1713352114983.jpeg</a></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/suipai/index.html"/>
      <url>/Gallery/suipai/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="1713351847925.jpeg" alt="1713351847925"></p><p><img src="1713351847527.jpeg" alt="1713351847527"></p><p><img src="1713351846608.jpeg" alt="1713351846608"></p><p><img src="1713351846223.jpeg" alt="1713351846223"></p><p><img src="1713351848581.jpeg" alt="1713351848581"></p><p><img src="1713351848697.jpeg" alt="1713351848697"></p><p><img src="1713351848222.jpeg" alt="1713351848222"></p><p><img src="1713352111411.jpeg" alt="1713352111411"></p><p><img src="1713352111304.jpeg" alt="1713352111304"></p><p><img src="1713351849228.jpeg" alt="1713351849228"></p><p><img src="1713352112802.jpeg" alt="1713352112802"></p><p><img src="1713352112877.jpeg" alt="1713352112877"></p><p><img src="1713352112532-1713356849143.jpeg" alt="1713352112532"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/sunshinA/index.html"/>
      <url>/Gallery/sunshinA/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="1713352114983.jpeg" alt="1713352114983"></p><p><img src="1713352114756.jpeg" alt="1713352114756"></p><p><img src="1713352114470.jpeg" alt="1713352114470"></p><p><img src="1713352113996.jpeg" alt="1713352113996"></p><p><img src="1713352117508.jpeg" alt="1713352117508"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/wanxiaA/index.html"/>
      <url>/Gallery/wanxiaA/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="1713351839120.jpeg" alt="1713351839120"></p><p><img src="1713352113465.jpeg" alt="1713352113465"></p><p><img src="1713352114983.jpeg" alt="1713352114983"></p><p><img src="1713352113417.jpeg" alt="1713352113417"></p><p><img src="1713351845765.jpeg" alt="1713351845765"></p><p><img src="1713351841395.jpeg" alt="1713351841395"></p><p><img src="1713351841042.jpeg" alt="1713351841042"></p><p><img src="1713351840782.jpeg" alt="1713351840782"></p><p><img src="1713351838719.jpeg" alt="1713351838719"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/lushan/index.html"/>
      <url>/Gallery/lushan/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="1713351843744.jpeg" alt="1713351843744"></p><p><img src="1713351843894.jpeg" alt="1713351843894"></p><ul><li>庐山恋</li></ul><p><img src="1713351844073.jpeg" alt="1713351844073"></p><p><img src="1713351844192.jpeg" alt="1713351844192"></p><ul><li>我在庐山很想你</li></ul><p><img src="1713351844430-1713355112648.jpeg" alt="1713351844430"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/wanxiaB/index.html"/>
      <url>/Gallery/wanxiaB/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="1713352115827-1713355418355.jpeg" alt="1713352115827"></p><p><img src="1713351840620.jpeg" alt="1713351840620"></p><p><img src="1713351842823.jpeg" alt="1713351842823"></p><p><img src="1713351843354.jpeg" alt="1713351843354"></p><p><img src="1713352111602.jpeg" alt="1713352111602"></p><p><img src="Image_1713351583820.jpg" alt="Image_1713351583820"></p><p><img src="Image_1713351590252.jpg" alt="Image_1713351590252"></p><p><img src="1713352115971.jpeg" alt="1713352115971"></p><p><img src="1713351839495.jpeg" alt="1713351839495"></p>          </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/Gallery/xuetian/index.html"/>
      <url>/Gallery/xuetian/index.html</url>
      
        <content type="html"><![CDATA[<div class="fj-gallery"><p><img src="1713351837942.jpeg" alt="1713351837942"></p><p><img src="1713351838357.jpeg" alt="1713351838357"></p><p><img src="1713351838990-1713355560186.jpeg" alt="1713351838990"></p>          </div>]]></content>
      
    </entry>
    
    
  
</search>
